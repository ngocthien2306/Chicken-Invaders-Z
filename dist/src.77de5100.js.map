{"version":3,"sources":["view/CanvasView.ts","services/Chicken.ts","setup.ts","services/Item.ts","design/strategy/context.ts","services/Bullet.ts","design/strategy/FireStrategy.ts","design/strategy/IceStrategy.ts","design/strategy/LightningStrategy.ts","design/strategy/LeafStrategy.ts","design/strategy/StoneStrategy.ts","design/strategy/ChickenMeatStrategy.ts","design/strategy/OtherItemStrategy.ts","extensions/helper.extension.ts","Colision.ts","services/Egg.ts","extensions/move.extensions.ts","design/strategy/NomalStrategy.ts","services/Nuke.ts","design/singleton/SingletonStarShip.ts","design/factory/basic-mode/BasicModeEazy.ts","design/factory/concrete-factory/ConcreteFactoryBasic.ts","design/factory/advance-mode/AdvanceModeChallenges.ts","design/factory/basic-mode/BasicModeHard.ts","design/factory/concrete-factory/ConcreteFactoryChallenge.ts","design/factory/concrete-factory/ConcreteFactoryHard.ts","design/factory/basic-mode/BasicModeMedium.ts","design/factory/concrete-factory/ConcreteFactoryMedium.ts","design/factory/advance-mode/AdvanceModeSuperHard.ts","design/factory/concrete-factory/ConcreteFactorySuperHard.ts","extensions/mode.extension.ts","index.ts","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["import { Chicken } from \"~/services/Chicken\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { StarShip } from \"~/services/StarShip\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport { Egg } from \"~/services/Egg\";\r\nimport { SingletonStarShip } from \"~/design/singleton/SingletonStarShip\";\r\nimport { EazyMode } from \"~/design/factory/basic-mode/BasicModeEazy\";\r\nimport { Nuke } from \"~/services/Nuke\";\r\n\r\nexport class CanvasView {\r\n  canvas: HTMLCanvasElement;\r\n  public context: CanvasRenderingContext2D | null;\r\n  private scoreDisplay: HTMLObjectElement | null;\r\n  private start: HTMLObjectElement | null;\r\n  private info: HTMLObjectElement | null;\r\n  private heart: HTMLObjectElement | null;\r\n  private meat: HTMLObjectElement | null;\r\n  private coin: HTMLObjectElement | null;\r\n  private gift: HTMLImageElement | null;\r\n  private hp: HTMLObjectElement | null;\r\n  private mode: HTMLSelectElement | null;\r\n  public btn_lv: HTMLButtonElement | null;\r\n  public table_record: HTMLTableElement | null;\r\n  public nuke: HTMLObjectElement | null;\r\n  public starShip: HTMLButtonElement | null;\r\n  public choose_starship: HTMLObjectElement | null;\r\n  public choose_lv: HTMLObjectElement | null;\r\n\r\n\r\n  constructor(canvasName: string) {\r\n    this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n    this.context = this.canvas.getContext('2d');\r\n    this.scoreDisplay = document.querySelector('#score');\r\n    this.start = document.querySelector('#start');\r\n    this.info = document.querySelector('#info');\r\n    this.heart = document.querySelector('#heart1');\r\n    this.meat = document.querySelector(\"#meat\");\r\n    this.coin = document.querySelector(\"#coin\");\r\n    this.gift = document.querySelector(\"#img-gift\");\r\n    this.hp = document.querySelector(\"#progress\");\r\n    this.mode = document.querySelector(\"#select-mode\");\r\n    this.btn_lv = document.querySelector(\"#lv1-1\");\r\n    this.table_record  = document.querySelector(\"#table-record\")\r\n    this.nuke = document.querySelector(\"#number-nuke\");\r\n    this.starShip = document.querySelector(\"#starship03\");\r\n    this.choose_starship = document.querySelector(\"#choose_starship\");\r\n    this.choose_lv = document.querySelector(\"#choose_lv\");\r\n\r\n  }\r\n  getStarShip(): any {\r\n    if(this.choose_starship) \r\n    return this.choose_starship.textContent?.toString();\r\n  }\r\n  getLV(): any {\r\n    if(this.choose_lv) \r\n    return this.choose_lv.textContent?.toString();\r\n  }\r\n  getBtnLv(lv: string) {\r\n    this.btn_lv = document.querySelector(lv);\r\n  }\r\n  \r\n  setEnableLV() {\r\n    if(this.btn_lv) this.btn_lv.disabled = false; \r\n  }\r\n\r\n  clear():void {\r\n    this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  initStartButton(startFunction: (view: CanvasView) => void ):void {\r\n    this.start?.addEventListener('click', () => startFunction(this));\r\n  }\r\n\r\n  drawScore(score: string): void {\r\n    if(this.scoreDisplay) this.scoreDisplay.innerHTML = score;\r\n  }\r\n\r\n  drawInfo(txt: string): void {\r\n    if(this.info) this.info.innerHTML = txt;\r\n  }\r\n  drawHeart(txt: string): void {\r\n    if(this.heart) this.heart.innerHTML = txt;\r\n  }\r\n\r\n  drawMeat(txt: string): void {\r\n    if(this.meat) this.meat.innerHTML = txt;\r\n  }\r\n\r\n  drawCoin(txt: string): void {\r\n    if(this.coin) this.coin.innerHTML = txt;\r\n  }\r\n\r\n  drawNuke(txt: string): void {\r\n    if(this.nuke) this.nuke.innerHTML = txt;\r\n  }\r\n  drawGift(txt: string): void {\r\n    if(this.gift) this.gift.src = txt;\r\n  }\r\n\r\n  drawHP(txt: string): void {\r\n    if(this.hp) this.hp.innerHTML = txt;\r\n  }\r\n\r\n  getMode(): any {\r\n    if(this.mode) return this.mode.value;\r\n  }\r\n\r\n  drawSprite(frame: Chicken | SingletonStarShip | Bullet | ItemSupport | Egg | EazyMode | Nuke): void {\r\n    if(!frame) return;\r\n    this.context?.drawImage(\r\n      frame.image,\r\n      frame.pos.x,\r\n      frame.pos.y,\r\n      frame.width,\r\n      frame.height\r\n    );\r\n  }\r\n\r\n  drawChicken(chickens: Chicken[]): void {\r\n    chickens.forEach(chicken => {\r\n      this.drawSprite(chicken)\r\n      chicken.changeYDirection();\r\n    })\r\n  }\r\n  drawBullet(bullet: Bullet, starShip: StarShip): void {\r\n    //console.log(starShip.pos.x, starShip.pos.y)\r\n    if(!bullet) return;\r\n    this.context?.drawImage(\r\n      bullet.image,\r\n      (bullet.pos.x),\r\n      (bullet.pos.y),\r\n      bullet.width,\r\n      bullet.height\r\n    );\r\n  }\r\n}","import { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\nimport { Egg } from \"./Egg\";\r\n\r\nexport class Chicken {\r\n  private chickenImage: HTMLImageElement = new Image();\r\n  private speed: Vector;\r\n  public count: number = 0;\r\n\r\n  constructor(\r\n    speed: number,\r\n    private chickenWidth: number,\r\n    private chickenHeight: number,\r\n    private postion: Vector,\r\n    private chickenEnergy: number,\r\n    image: string\r\n\r\n    ) \r\n    {\r\n      this.speed = {\r\n        x: speed,\r\n        y: -speed\r\n      };\r\n      this.chickenWidth = chickenWidth;\r\n      this.chickenHeight = chickenHeight;\r\n      this.postion = postion;\r\n      this.chickenEnergy = chickenEnergy;\r\n      this.chickenImage.src = image;\r\n\r\n    }\r\n  \r\n  get countMove(): number {\r\n    return this.count;\r\n  }\r\n\r\n  get width(): number {\r\n    return this.chickenWidth;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.chickenHeight;\r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.postion;\r\n  }\r\n\r\n  get image(): HTMLImageElement { \r\n    return this.chickenImage;\r\n  }\r\n\r\n  get energy(): number {\r\n    return this.chickenEnergy;\r\n  }\r\n\r\n  set energy(energy: number) {\r\n    this.chickenEnergy = energy;\r\n  }\r\n  changeYDirection(): void {\r\n    this.speed.y = this.speed.y;\r\n  }\r\n\r\n  moveChicken(view: CanvasView): void {\r\n    if(this.pos.x < 0 || (this.pos.x + this.width) > view.canvas.width) {\r\n      this.speed.x = - this.speed.x;\r\n    }\r\n\r\n    if (this.pos.y < 0 || (this.pos.y + this.height) > view.canvas.height/1.5) {\r\n      this.speed.y = - this.speed.y;\r\n    }\r\n    this.pos.x += this.speed.x\r\n    this.pos.y += this.speed.y;\r\n  }\r\n  \r\n\r\n}\r\n","import CHICK from './images/chick.png';\r\nimport BLUE_CHICKEN_IMAGE from './images/chicken_blue.png';\r\nimport RED_CHICKEN_IMAGE from './images/chicken_red.png';\r\nimport BOSS01_CHICKEN_IMAGE from './images/chicken05.png';\r\nimport BOSS02_CHICKEN_IMAGE from './images/chicken06.png';\r\n\r\n// Grab the canvas element for calculating the brick width\r\n// depending on canvas width\r\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\r\n\r\n// Constants\r\nexport const STAGE_PADDING = 10;\r\nexport const STAGE_ROWS = 10;\r\nexport const STAGE_COLS = 15;\r\nexport const BRICK_PADDING = 5;\r\nexport const BRICK_WIDTH = canvas\r\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\r\n  : (1000/15);\r\nexport const BRICK_HEIGHT = canvas\r\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\r\n  : (600/10);\r\nexport const PADDLE_WIDTH = 90;\r\nexport const PADDLE_HEIGHT = 80;\r\nexport const PADDLE_STARTX = 450;\r\nexport const PADDLE_SPEED = 12;\r\nexport const BALL_SPEED = 10;\r\nexport const BALL_SIZE = 20;\r\nexport const BALL_STARTX = 500;\r\nexport const BALL_STARTY = 500;\r\n\r\nexport const CHICKEN_IMAGES: { [key: number]: string } = {\r\n  1: CHICK,\r\n  2: RED_CHICKEN_IMAGE,\r\n  3: BLUE_CHICKEN_IMAGE,\r\n  4: BOSS01_CHICKEN_IMAGE,\r\n  5: BOSS02_CHICKEN_IMAGE,\r\n  6: BOSS01_CHICKEN_IMAGE,\r\n  7: BOSS02_CHICKEN_IMAGE\r\n};\r\n\r\nexport const CHICKEN_ENERGY: { [key: number]: number } = {\r\n  1: 2, \r\n  2: 2, \r\n  3: 6, \r\n  4: 8, \r\n  5: 10,\r\n  6: 1000,\r\n  7: 1400\r\n};\r\n\r\nexport const LEVEL1 = [\r\n1\r\n];\r\n// 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n// 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n// 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 1, 0, 0,\r\n// 0, 0, 1, 1, 5, 5, 5, 5, 4, 4, 4, 4, 1, 0, 0,\r\n// 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n// prettier-ignore\r\nexport const LEVEL3 = [\r\n0, 0, 0, 0, 6, 0, 0, 0, 0\r\n];\r\n\r\nexport const LEVEL2 = [\r\n  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n];\r\n\r\nexport const LEVEL4 = [\r\n  0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n  0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n  0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n  0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n  0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n];\r\n\r\nexport const LEVEL5 = [\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n];\r\n\r\nexport const LEVEL6 = [\r\n  0, 0, 0, 0, 7, 0, 0, 0, 0,\r\n  ];\r\n\r\nexport const LEVEL7 = [\r\n  0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n  0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n  0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n  ];\r\n\r\n  export const LEVEL8 = [\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    ];\r\n  \r\n  export const LEVEL9 = [\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL10 = [\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL11 = [\r\n    0, 0, 6, 0, 0, 0, 7, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL12 = [\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL13 = [\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n    ];\r\n  \r\n  export const LEVEL14 = [\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL15 = [\r\n    1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,\r\n    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n    0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL16 = [\r\n    0, 0, 6, 0, 6, 0, 7, 0, 0,\r\n    ];\r\n\r\n  export const LEVEL17 = [\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0,\r\n    ]; \r\n\r\n  export const LEVEL18 = [\r\n    6, 0, 6, 0, 0, 0, 7, 0, 7,\r\n    ];\r\n\r\n  export const LV = [LEVEL1, LEVEL2, LEVEL3, LEVEL4, LEVEL5, LEVEL6, \r\n    LEVEL7, LEVEL8, LEVEL9, LEVEL10, LEVEL11, LEVEL12, LEVEL13, \r\n    LEVEL14, LEVEL15, LEVEL16, LEVEL17, LEVEL18\r\n  ]\r\n\r\n\r\n\r\n// export const LEVEL = [\r\n//   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n//   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n//   0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\r\n//   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n//   0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \r\n//   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n// ];\r\n\r\n\r\n// export const LEVEL2 = [\r\n//   0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\r\n//   0, 0, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 0, 0,\r\n//   0, 0, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 0,\r\n//   0, 0, 3, 0, 4, 4, 5, 5, 5, 4, 4, 0, 3, 0, 0,\r\n//   0, 0, 2, 2, 0, 2, 2, 0, 2, 2, 0, 2, 2, 0, 0,\r\n// ];\r\n\r\n\r\n","import { Vector } from \"~/types\";\r\nexport class ItemSupport {\r\n  private speed: Vector;\r\n  private itemImage: HTMLImageElement = new Image();\r\n  typeItem: number;\r\n  constructor(speed: number, private itemSize: number, private position: Vector, image: string, typeItem: number) {\r\n    this.itemSize = itemSize;\r\n    this.position = position;\r\n    this.speed = {\r\n      x: speed,\r\n      y: -speed\r\n    }\r\n    this.itemImage.src = image;\r\n    this.typeItem = typeItem;\r\n  }\r\n  get typeGift(): number {\r\n    return this.typeItem;\r\n  }\r\n  get width(): number {\r\n    return this.itemSize;\r\n  }\r\n  get height(): number {\r\n    return this.itemSize;  \r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.position;\r\n  }\r\n\r\n  get image(): HTMLImageElement { \r\n    return this.itemImage;\r\n  }\r\n  changeYDirection(): void {\r\n    this.speed.y = -this.speed.y;\r\n  }\r\n  changeXDirection(): void {\r\n    this.speed.x = -this.speed.x;\r\n  }\r\n\r\n  changeDirectionWhenConfict(): void {\r\n    this.pos.y = -100;\r\n    this.pos.x = -100;\r\n  }\r\n\r\n  moveItemSupport(): void {\r\n    //console.log(this.pos.x, this.pos.y);\r\n    //this.pos.x += this.speed.x;\r\n    this.pos.y -= this.speed.y;\r\n  }\r\n\r\n\r\n}","\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport { Vector } from \"~/types\";\r\n\r\nexport class Context {\r\n\r\n  private strategy: IStrategy;\r\n\r\n\r\n  constructor(strategy: IStrategy) {\r\n      this.strategy = strategy;\r\n  }\r\n\r\n\r\n  public setStrategy(strategy: IStrategy) {\r\n      this.strategy = strategy;\r\n  }\r\n\r\n\r\n  public doBusinessLogicBullet(data: BulletModel, pos: Vector): Bullet {\r\n    return this.strategy.doChangeInfoBullet(data, pos);\r\n  }\r\n\r\n  doBusinessLogicItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    return this.strategy.doChangeTypeItem(data, pos);\r\n  }\r\n\r\n}","\r\nimport { getRandomSpeed } from \"~/extensions/helper.extension\";\r\nimport { Vector } from \"~/types\";\r\nexport class Bullet {\r\n  private speed: Vector;\r\n  damage: number;\r\n  shoting: boolean;\r\n  deviation: number;\r\n  private bulletImage: HTMLImageElement = new Image();\r\n  constructor(speed: number, private bulletSize: number, private position: Vector, image: string, damage: number, deviation: number) {\r\n    this.bulletSize = bulletSize;\r\n    this.position = position;\r\n    this.speed = {\r\n      x: speed,\r\n      y: -speed\r\n    } \r\n    this.bulletImage.src = image;\r\n    this.shoting = false;\r\n    this.damage = damage;\r\n    this.deviation = deviation;\r\n    //document.addEventListener('keydown', this.handleKeySpace);\r\n  }\r\n\r\n  // Getters\r\n  get width(): number {\r\n    return this.bulletSize;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.bulletSize;\r\n  }\r\n\r\n  get deviationBullet() :number {\r\n    return this.deviation;\r\n  }\r\n  get damageAttack(): number {\r\n    return this.damage;\r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.position;\r\n  }\r\n\r\n  get image(): HTMLImageElement {\r\n    return this.bulletImage;\r\n  }\r\n  get isShooting(): boolean {\r\n    return this.shoting;\r\n  }\r\n  // Methods\r\n  changeYDirection(): void {\r\n    this.speed.y = -this.speed.y;\r\n  }\r\n\r\n  changeYODirection(): void {\r\n    this.pos.y = -20;\r\n    this.pos.x = -20;\r\n  }\r\n\r\n  changeXDirection(): void {\r\n    this.speed.x = -this.speed.x;\r\n  }\r\n  moveBullet(): void {\r\n    const {number, type} = getRandomSpeed(this.deviationBullet);\r\n    if(type === 1)\r\n      this.pos.x += number;\r\n    else\r\n      this.pos.x -= number;;\r\n    this.pos.y += this.speed.y;\r\n  }\r\n\r\n  moveInitial():void {\r\n    this.pos.x = 0;\r\n  }\r\n\r\n  // handleKeySpace = (e: KeyboardEvent): void => {\r\n\r\n  //   if(e.code === 'a' || e.key === 'a') this.shoting = true;\r\n  // }\r\n\r\n  // drawBullet() {\r\n  //   const bullet = new Bullet(BALL_SPEED, BALL_SIZE, {x: BALL_STARTX, y: BALL_STARTY}, BALL_IMAGE, 2)\r\n  // }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport GIFT_RED from '/images/gift-fire.png';\r\nimport FIRE_BULLET from '/images/fire-bullet.png';\r\nimport { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\n\r\n\r\nexport class FireStrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const fireBullet: BulletModel = {\r\n      speed: data.speed - 4,\r\n      size: data.size + 5,\r\n      image: FIRE_BULLET,\r\n      damage: randomIntFromInterval(data.damage + 2, data.damage + 5)  \r\n    };\r\n    const bullet = new Bullet(\r\n      fireBullet.speed, fireBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - fireBullet.size/2),\r\n       y: pos.y}, \r\n       fireBullet.image, fireBullet.damage, 3);\r\n       \r\n    return bullet;\r\n  }\r\n  \r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size,\r\n      image: GIFT_RED,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport GIFT_BLUE from '/images/gift-blue.png';\r\nimport ICE_BULLET from '/images/ice-bullet.png';\r\nimport { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\n\r\n\r\nexport class IceStrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const iceBullet: BulletModel = {\r\n      speed: data.speed + 5,\r\n      size: data.size + 5,\r\n      image: ICE_BULLET,\r\n      damage: randomIntFromInterval(data.damage + 1, data.damage + 3)  \r\n    };\r\n    const bullet = new Bullet(\r\n      iceBullet.speed, iceBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - iceBullet.size/2),\r\n       y: pos.y}, \r\n       iceBullet.image, iceBullet.damage, 3);\r\n\r\n    return bullet;\r\n  }\r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size-10,\r\n      image: GIFT_BLUE,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport GIFT_LIGHT from '/images/gift-light.png';\r\nimport LIGHT_BULLET from '/images/light-bullet.png';\r\nimport { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\n\r\n\r\nexport class LightStrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const lightBullet: BulletModel = {\r\n      speed: data.speed + 6,\r\n      size: data.size + 7,\r\n      image: LIGHT_BULLET,\r\n      damage: randomIntFromInterval(data.damage - 1, data.damage + 1)  \r\n    };\r\n    const bullet = new Bullet(\r\n      lightBullet.speed, lightBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - lightBullet.size/2),\r\n       y: pos.y}, \r\n       lightBullet.image, lightBullet.damage, 15);\r\n    return bullet;\r\n  }\r\n  \r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size-10,\r\n      image: GIFT_LIGHT,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\n\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport GIFT_GREEN from '/images/green-gift.png';\r\nimport LEAF_BULLET from '/images/leaf-bullet.png';\r\nimport { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\n\r\n\r\nexport class LeafStrategy implements IStrategy  {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const lightBullet: BulletModel = {\r\n      speed: data.speed + 3,\r\n      size: data.size + 2,\r\n      image: LEAF_BULLET,\r\n      damage: randomIntFromInterval(data.damage + 1, data.damage + 5)  \r\n    };\r\n    const bullet = new Bullet(\r\n      lightBullet.speed, lightBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - lightBullet.size/2),\r\n       y: pos.y}, \r\n       lightBullet.image, lightBullet.damage, 2);\r\n    return bullet;\r\n  }\r\n  \r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size,\r\n      image: GIFT_GREEN,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\n\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport GIFT_STONE from '/images/gift-stone.png';\r\nimport STONE_BULLET from '/images/stone-bullet.png';\r\n\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\nimport { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\n\r\nexport class StoneStrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const iceBullet: BulletModel = {\r\n      speed: data.speed + 5,\r\n      size: data.size + 5,\r\n      image: STONE_BULLET,\r\n      damage: randomIntFromInterval(data.damage, data.damage + 3)  \r\n    };\r\n    const bullet = new Bullet(\r\n      iceBullet.speed, iceBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - iceBullet.size/2),\r\n       y: pos.y}, \r\n       iceBullet.image, iceBullet.damage, 1);\r\n\r\n    return bullet;\r\n  }\r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size-10,\r\n      image: GIFT_STONE,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\n\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport GIFT_GREEN from '/images/green-gift.png';\r\nimport LEAF_BULLET from '/images/leaf-bullet.png';\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\n\r\nexport class ChickenMeatStrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const lightBullet: BulletModel = {\r\n      speed: data.speed + 5,\r\n      size: data.size + 2,\r\n      image: LEAF_BULLET,\r\n      damage: data.damage + 3\r\n    };\r\n    const bullet = new Bullet(\r\n      lightBullet.speed, lightBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - lightBullet.size/2),\r\n       y: pos.y}, \r\n       lightBullet.image, lightBullet.damage, 1);\r\n    return bullet;\r\n  }\r\n  \r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size,\r\n      image: data.image,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\n\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport GIFT_GREEN from '/images/green-gift.png';\r\nimport LEAF_BULLET from '/images/leaf-bullet.png';\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\n\r\nexport class OtherItemStrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const lightBullet: BulletModel = {\r\n      speed: data.speed + 5,\r\n      size: data.size + 2,\r\n      image: LEAF_BULLET,\r\n      damage: data.damage + 3\r\n    };\r\n    const bullet = new Bullet(\r\n      lightBullet.speed, lightBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - lightBullet.size/2),\r\n       y: pos.y}, \r\n       lightBullet.image, lightBullet.damage, 1);\r\n    return bullet;\r\n  }\r\n  \r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size,\r\n      image: data.image,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","import { CategoryModel, ItemModel } from '../model/Item.model';\r\nimport { Chicken } from '../services/Chicken';\r\nimport GIFT_FIRE from '/images/gift-fire.png';\r\nimport MEAT_SMALL from '/images/meat01.png';\r\nimport MEAT_MEDIUM from '/images/meat02.png';\r\nimport MEAT_LARGE from '/images/meat03.png';\r\nimport HEART from '/images/heart.png';\r\nimport COIN from '/images/coin.png';\r\nimport EGG_IMAGE from '/images/egg.png';\r\nimport {\r\n  CHICKEN_IMAGES,\r\n  STAGE_COLS,\r\n  STAGE_PADDING,\r\n  BRICK_WIDTH,\r\n  BRICK_HEIGHT,\r\n  BRICK_PADDING,\r\n  CHICKEN_ENERGY\r\n  \r\n} from '../setup';\r\nimport { ItemSupport } from '../services/Item';\r\nimport { Vector } from '../types';\r\n\r\nimport { CanvasView } from '../view/CanvasView';\r\nimport { Context } from '~/design/strategy/context';\r\nimport { FireStrategy } from '~/design/strategy/FireStrategy';\r\nimport { IceStrategy } from '~/design/strategy/IceStrategy';\r\nimport { LightStrategy } from '~/design/strategy/LightningStrategy';\r\nimport { LeafStrategy } from '~/design/strategy/LeafStrategy';\r\nimport { StoneStrategy } from '~/design/strategy/StoneStrategy';\r\nimport { ChickenMeatStrategy } from '~/design/strategy/ChickenMeatStrategy';\r\nimport { OtherItemStrategy } from '~/design/strategy/OtherItemStrategy';\r\nimport { EazyMode } from '~/design/factory/basic-mode/BasicModeEazy';\r\nimport { MediumMode } from '~/design/factory/basic-mode/BasicModeMedium';\r\nimport { HardMode } from '~/design/factory/basic-mode/BasicModeHard';\r\nimport { ChallengesMode } from '~/design/factory/advance-mode/AdvanceModeChallenges';\r\nimport { SuperHardMode } from '~/design/factory/advance-mode/AdvanceModeSuperHard';\r\n\r\nexport function createChickens(level: number[]): Chicken[] {\r\n\r\n  return level.reduce((ack, element, i) => {\r\n    const row = Math.floor((i + 1) / STAGE_COLS);\r\n    const col = i % STAGE_COLS;\r\n\r\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n\r\n    if (element === 0) return ack;\r\n\r\n    return [\r\n      ...ack,\r\n      new Chicken(\r\n        10,\r\n        BRICK_WIDTH,\r\n        BRICK_HEIGHT,\r\n        { x, y },\r\n        CHICKEN_ENERGY[element],\r\n        CHICKEN_IMAGES[element],\r\n        \r\n      )\r\n    ];\r\n  }, [] as Chicken[]);\r\n}\r\nexport function sumEnergyChicken(chickens: EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[]): number {\r\n  var count = 0;\r\n  chickens.forEach(c => {\r\n    count += c.energy;\r\n  });\r\n  return count;\r\n}\r\nexport function hpRemaining(sumEnergy: number, sumEnergyRemaining: number): string{\r\n  var percentHp = (sumEnergyRemaining / sumEnergy) * 100;\r\n  if(sumEnergyRemaining < 0) sumEnergyRemaining = 0;\r\n  var drawString = \" <div class='progress-bar progress-bar-striped bg-danger' role='progressbar' style='width: \" + percentHp.toString() +\"%'> </div> <spans'>\" + sumEnergyRemaining.toString() + \"</span> \";\r\n  return drawString;\r\n}\r\nexport function createBoss(level: number[]): Chicken[] {\r\n  return level.reduce((ack, element, i) => {\r\n    const row = Math.floor((i + 1) / STAGE_COLS);\r\n    const col = i % STAGE_COLS;\r\n\r\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n\r\n    if (element === 0) return ack;\r\n\r\n    return [\r\n      ...ack,\r\n      new Chicken(\r\n        2,\r\n        200,\r\n        220,\r\n        { x, y },\r\n        CHICKEN_ENERGY[element],\r\n        CHICKEN_IMAGES[element],\r\n        \r\n      )\r\n    ];\r\n  }, [] as any);\r\n}\r\nexport function createEgg(view: CanvasView, chicken: Chicken) :void {\r\n  const egg = new ItemSupport(1, 30, {x: chicken.pos.x , y: chicken.pos.y}, EGG_IMAGE, 1);\r\n  view.drawSprite(egg);\r\n  egg.moveItemSupport();\r\n}\r\nexport function getRandomInt(max: number) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\nexport function randomIntFromInterval(min: number, max: number) { // min and max included \r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\nexport function getRandomSpeed(max: number): {number: number, type: number} {\r\n  var plusOrMinus = Math.random() < 0.5 ? -1 : 1;\r\n  var ranNum = Math.floor(Math.random()*max)\r\n  return {number: ranNum, type:plusOrMinus}\r\n}\r\n\r\nexport function createHeart(num: number): string {\r\n  let icon = \"<span>\" + num.toString() + \"</span> \"  + \"<i class='fa fa-heart red'></i>\";\r\n  return icon;\r\n}\r\n\r\nexport function changeGiftBoxesInUI(index: number): string {\r\n  let img = \"/gift-normal.png\";\r\n  if(index === 1) img = \"/gift-gift-fire.png\"\r\n  else if(index === 2) img = '/gift-blue.png';\r\n  else if(index === 3) img = \"/gift-light.png\";\r\n  else if(index === 4) img = '/green-gift.png';\r\n  else if(index === 5) img = '/gift-stone.png';\r\n\r\n  return img;\r\n}\r\n\r\n// generate list item (gift, meat, coin,...)\r\nexport function listCategoryItem(): CategoryModel[] {\r\n\r\n  let categorys: CategoryModel[] = [];\r\n  const category1: CategoryModel = {Id: 1, Name: \"FireBullets\", Type: \"bullet\"};\r\n  const category2: CategoryModel = {Id: 2, Name: \"IceBullets\", Type: \"bullet\"};\r\n  const category3: CategoryModel = {Id: 3, Name: \"LightBullets\", Type: \"bullet\"};\r\n  const category4: CategoryModel = {Id: 4, Name: \"LeafBullets\", Type: \"bullet\"};\r\n  const category5: CategoryModel = {Id: 5, Name: \"StoneBullets\", Type: \"bullet\"};\r\n\r\n  const category6: CategoryModel = {Id: 6, Name: \"ChickenThighsSmall\", Type: \"meat\"};\r\n  const category7: CategoryModel = {Id: 7, Name: \"ChickenThighsMedium\", Type: \"meat\"};\r\n  const category8: CategoryModel = {Id: 8, Name: \"ChickenThighsLarge\", Type: \"meat\"};\r\n\r\n  const category9: CategoryModel = {Id: 9, Name: \"Heart\", Type: \"level\"};\r\n  const category10: CategoryModel = {Id: 10, Name: \"Money\", Type: \"money\"};\r\n\r\n  const category11: CategoryModel = {Id: 11, Name: \"Egg\", Type: \"egg\"};\r\n\r\n  categorys.push(category1);\r\n  categorys.push(category2);\r\n  categorys.push(category3);\r\n  categorys.push(category4);\r\n  categorys.push(category5);\r\n  categorys.push(category6);\r\n  categorys.push(category7);\r\n  categorys.push(category8);\r\n  categorys.push(category9);\r\n  categorys.push(category10);\r\n  categorys.push(category11);\r\n  return categorys;\r\n\r\n}\r\n\r\nexport function getItemSupport(posX: number, posY: number): ItemSupport {\r\n  const categorys = listCategoryItem();\r\n  //console.log(categorys);\r\n  const randomNumber = getRandomInt(10);\r\n\r\n  const vector: Vector = {x: posX, y: posY}\r\n  const model: ItemModel = {\r\n    speed: 1,\r\n    size: 50, \r\n    image: GIFT_FIRE,\r\n    type: categorys[randomNumber]\r\n  }\r\n\r\n  let item: any;\r\n  if(randomNumber === 0) {\r\n    const context = new Context(new FireStrategy());\r\n    item = context.doBusinessLogicItem(model, vector);\r\n  }\r\n  else if(randomNumber === 1) {\r\n    const context = new Context(new IceStrategy());\r\n    item = context.doBusinessLogicItem(model, vector);\r\n  }\r\n  else if(randomNumber === 2) {\r\n    const context = new Context(new LightStrategy());\r\n    item = context.doBusinessLogicItem(model, vector);\r\n  }\r\n  else if(randomNumber === 3) {\r\n    const context = new Context(new LeafStrategy());\r\n    item = context.doBusinessLogicItem(model, vector);\r\n  }\r\n  else if(randomNumber === 4) {\r\n    const context = new Context(new StoneStrategy());\r\n    item = context.doBusinessLogicItem(model, vector);\r\n  }\r\n  else if(randomNumber === 5) {\r\n    const modelMeat: ItemModel = {\r\n      speed: 1,\r\n      size: 30, \r\n      image: MEAT_SMALL,\r\n      type: categorys[randomNumber]\r\n    }\r\n    const context = new Context(new ChickenMeatStrategy());\r\n    item = context.doBusinessLogicItem(modelMeat, vector);\r\n  }\r\n  else if(randomNumber === 6) {\r\n    const modelMeat: ItemModel = {\r\n      speed: 1,\r\n      size: 40, \r\n      image: MEAT_MEDIUM,\r\n      type: categorys[randomNumber]\r\n    }\r\n    const context = new Context(new ChickenMeatStrategy());\r\n    item = context.doBusinessLogicItem(modelMeat, vector);\r\n  }\r\n  else if(randomNumber === 7) {\r\n    const modelMeat: ItemModel = {\r\n      speed: 1,\r\n      size: 60, \r\n      image: MEAT_LARGE,\r\n      type: categorys[randomNumber]\r\n    }\r\n    const context = new Context(new ChickenMeatStrategy());\r\n    item = context.doBusinessLogicItem(modelMeat, vector);\r\n  }\r\n  else if(randomNumber === 8) {\r\n    const modelMeat: ItemModel = {\r\n      speed: 1,\r\n      size: 40, \r\n      image: HEART,\r\n      type: categorys[randomNumber]\r\n    }\r\n    const context = new Context(new OtherItemStrategy());\r\n    item = context.doBusinessLogicItem(modelMeat, vector);\r\n  }\r\n  else if(randomNumber === 9) {\r\n    const modelMeat: ItemModel = {\r\n      speed: 1,\r\n      size: 40, \r\n      image: COIN,\r\n      type: categorys[randomNumber]\r\n    }\r\n    const context = new Context(new OtherItemStrategy());\r\n    item = context.doBusinessLogicItem(modelMeat, vector);\r\n  }\r\n  else if(randomNumber === 10) {\r\n    const modelMeat: ItemModel = {\r\n      speed: 1,\r\n      size: 30, \r\n      image: EGG_IMAGE,\r\n      type: categorys[randomNumber]\r\n    }\r\n    const context = new Context(new OtherItemStrategy());\r\n    item = context.doBusinessLogicItem(modelMeat, vector);\r\n  }\r\n  return item;\r\n}","import { Chicken } from \"./services/Chicken\";\r\nimport { StarShip } from \"./services/StarShip\";\r\nimport { Bullet } from \"./services/Bullet\";\r\nimport { CanvasView } from \"./view/CanvasView\";\r\nimport { ItemSupport } from \"./services/Item\";\r\n\r\n\r\nimport { ItemModel } from \"./model/Item.model\";\r\nimport { Egg } from \"./services/Egg\";\r\nimport { SingletonStarShip } from \"./design/singleton/SingletonStarShip\";\r\nimport { EazyMode } from \"./design/factory/basic-mode/BasicModeEazy\";\r\nimport { MediumMode } from \"./design/factory/basic-mode/BasicModeMedium\";\r\nimport { HardMode } from \"./design/factory/basic-mode/BasicModeHard\";\r\nimport { ChallengesMode } from \"./design/factory/advance-mode/AdvanceModeChallenges\";\r\nimport { SuperHardMode } from \"./design/factory/advance-mode/AdvanceModeSuperHard\";\r\nimport { getItemSupport, getRandomInt } from \"./extensions/helper.extension\";\r\nimport { Nuke } from \"./services/Nuke\";\r\nexport class Collision {\r\n\r\n  gifts: ItemSupport[] = [];\r\n  eggs: Egg[] = []\r\n  timeImmortal: number = 1000;\r\n  typeNumberItem!: number;\r\n  countMeat: number = 0;\r\n  countCoin: number = 0;\r\n  countNuke: number = 0;\r\n\r\n  get typeItem():number {\r\n    return this.typeNumberItem;\r\n  }\r\n  checkStarshipColliding(chickens: Chicken[], starShip: SingletonStarShip): boolean {\r\n    let colliding = false;\r\n    chickens.forEach((chicken, i) => {\r\n\r\n      if(\r\n        starShip.pos.x + starShip.width > chicken.pos.x &&\r\n        starShip.pos.x < chicken.pos.x + chicken.width &&\r\n        starShip.pos.y + starShip.height === chicken.pos.y\r\n      ) \r\n      {\r\n        colliding = true;\r\n      }\r\n    })\r\n    return colliding;\r\n  }\r\n  isCollidingChicken(bullet: Bullet, chicken: EazyMode | MediumMode | HardMode | ChallengesMode | SuperHardMode): boolean {\r\n\r\n    if (\r\n      bullet.pos.x < chicken.pos.x + chicken.width && \r\n      bullet.pos.x + bullet.width > chicken.pos.x &&\r\n      bullet.pos.y < chicken.pos.y + chicken.height &&\r\n      bullet.pos.y + bullet.height > chicken.pos.y\r\n    ) {\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  isCollidingNuke(nuke: Nuke, chicken: EazyMode | MediumMode | HardMode | ChallengesMode | SuperHardMode):boolean {\r\n    if (\r\n      nuke.pos.x < chicken.pos.x + chicken.width && \r\n      nuke.pos.x + nuke.width > chicken.pos.x &&\r\n      nuke.pos.y < chicken.pos.y + chicken.height &&\r\n      nuke.pos.y + nuke.height > chicken.pos.y\r\n    ) {\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isChickenConfictWall(chicken: Chicken, view: CanvasView) {\r\n    if(chicken.pos.x > view.canvas.width - chicken.width || chicken.pos.x < 0) {\r\n      //console.log(chicken.pos.x);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isChickenConfictWalls(chickens: Chicken[], view: CanvasView) {\r\n    \r\n  }\r\n\r\n  isCollidingNukes(nuke: Nuke, chickens: EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[]):boolean {\r\n    let colliding = false;\r\n    chickens.forEach((chicken, i) => { \r\n      if(this.isCollidingNuke(nuke, chicken)) {\r\n        nuke.changeDirectionWhenConfict();\r\n        if (chicken.energy <= 0) {\r\n          const randomNumber = getRandomInt(10);\r\n          if(randomNumber > 5) {\r\n            const gift = getItemSupport(chicken.pos.x, chicken.pos.y);           \r\n            //console.log(gift.typeGift);\r\n            this.gifts.push(gift);\r\n          }\r\n         \r\n        } \r\n        chickens.splice(i, 1);\r\n        colliding = true;\r\n      }\r\n     \r\n    })\r\n    return colliding;;\r\n  }\r\n  // Check bullet collision with chicken\r\n  isCollidingChickens(bullet: Bullet, chickens: EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[]): boolean {\r\n    let colliding = false;\r\n\r\n    chickens.forEach((chicken, i) => {\r\n      if (this.isCollidingChicken(bullet, chicken)) {\r\n        bullet.changeYODirection();\r\n        //console.log(chicken.energy);\r\n        //chicken.energy -= bullet.damage;\r\n        if (chicken.energy <= 0) {\r\n          const randomNumber = getRandomInt(10);\r\n          if(randomNumber > 5) {\r\n            const gift = getItemSupport(chicken.pos.x, chicken.pos.y);           \r\n            //console.log(gift.typeGift);\r\n            this.gifts.push(gift);\r\n          }\r\n          chickens.splice(i, 1);\r\n        } \r\n        else {\r\n          if(chicken.energy < bullet.damage) chicken.energy = 0;\r\n          else chicken.energy -= bullet.damage;\r\n        }\r\n        colliding = true;\r\n      }\r\n\r\n\r\n\r\n    });\r\n\r\n    return colliding;\r\n  }\r\n\r\n  checkCollidingStarshipWithChicken(chicken: EazyMode | MediumMode | HardMode | ChallengesMode | SuperHardMode, starShip: SingletonStarShip): boolean {\r\n    if (\r\n      chicken.pos.x + chicken.width > starShip.pos.x &&\r\n      chicken.pos.x < starShip.pos.x + starShip.width &&\r\n      chicken.pos.y < starShip.pos.y + starShip.height &&\r\n      chicken.pos.y + chicken.height > starShip.pos.y\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkCollidingStarshipWithChickens(chickens: EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[], starShip: SingletonStarShip): boolean {\r\n    let colliding = false;\r\n\r\n    chickens.forEach((chicken, i) => {\r\n      if(this.checkCollidingStarshipWithChicken(chicken, starShip)) {\r\n        chickens.splice(i, 1);\r\n        starShip.pos.x = 450;\r\n        starShip.pos.y = 515;\r\n\r\n        if(starShip.heart === 0) {\r\n          colliding = true;\r\n        }\r\n        else {\r\n          starShip.level -= 1;\r\n        }\r\n      }\r\n    })\r\n    return colliding;\r\n  }\r\n  checkCollidingEgg(egg: Egg, starShip: SingletonStarShip): void {\r\n    if(\r\n      egg.pos.x + egg.width > starShip.pos.x &&\r\n      egg.pos.x < starShip.pos.x + starShip.width &&\r\n      egg.pos.y + egg.height > starShip.pos.y &&\r\n      egg.pos.y < starShip.pos.y + starShip.height\r\n      ) \r\n      {\r\n        starShip.pos.x = 450;\r\n        starShip.pos.y = 515;\r\n        egg.changeDirectionWhenConfict();\r\n        starShip.level--;\r\n      }\r\n  }\r\n  checkCollidingItem(item: ItemSupport, starShip: SingletonStarShip): boolean {\r\n    let isConflicking = false;\r\n    if(\r\n      item.pos.x + item.width > starShip.pos.x &&\r\n      item.pos.x < starShip.pos.x + starShip.width &&\r\n      item.pos.y + item.height > starShip.pos.y &&\r\n      item.pos.y < starShip.pos.y + starShip.height\r\n      )\r\n    {\r\n      item.changeDirectionWhenConfict();\r\n      if(item.typeGift < 6) {\r\n        this.typeNumberItem = item.typeGift;\r\n        \r\n      }\r\n      else if (item.typeGift === 9){\r\n        starShip.level++;\r\n      }\r\n      else if (item.typeGift === 10) {\r\n        this.countCoin++;\r\n      }\r\n      else if(item.typeGift === 6) {\r\n        this.countMeat++;\r\n        starShip.score += 2;\r\n      }\r\n      else if(item.typeGift === 8) {\r\n        this.countMeat += 5;\r\n        starShip.score += 5*2;\r\n      }\r\n      else if(item.typeGift === 7) {\r\n        this.countMeat += 3;\r\n        starShip.score += 3*2;\r\n      }\r\n      \r\n      if(this.countMeat > 20) {\r\n        this.countNuke++;\r\n        this.countMeat -= 20;\r\n      }\r\n      \r\n      \r\n      isConflicking = true;\r\n    }\r\n    return isConflicking;\r\n  }\r\n\r\n\r\n}","import { Vector } from \"~/types\";\r\n\r\n\r\nexport class Egg {\r\n  private eggImage: HTMLImageElement = new Image();\r\n  private speed: Vector;\r\n  constructor(\r\n    speed: number,\r\n    private eggWidth: number,\r\n    private eggHeight: number,\r\n    private postion: Vector,\r\n    image: string\r\n\r\n  ) \r\n  {\r\n    this.speed = {\r\n      x: speed,\r\n      y: -speed\r\n    };\r\n    this.eggWidth = eggWidth;\r\n    this.eggHeight = eggHeight;\r\n    this.postion = postion;\r\n    this.eggImage.src = image;\r\n  }\r\n  get width(): number {\r\n    return this.eggWidth;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.eggHeight;\r\n  }\r\n\r\n  get pos(): Vector {\r\n    return this.postion;\r\n  }\r\n\r\n  get image(): HTMLImageElement { \r\n    return this.eggImage;\r\n  }\r\n  moveEgg(): void {\r\n    this.pos.y -= this.speed.y;\r\n    this.pos.x -= this.speed.x/2;\r\n  }\r\n  changeDirectionWhenConfict(): void {\r\n    this.pos.y = -100;\r\n    this.pos.x = -100;\r\n  }\r\n}","import { Collision } from \"~/Colision\";\r\nimport { ChallengesMode } from \"~/design/factory/advance-mode/AdvanceModeChallenges\";\r\nimport { SuperHardMode } from \"~/design/factory/advance-mode/AdvanceModeSuperHard\";\r\nimport { EazyMode } from \"~/design/factory/basic-mode/BasicModeEazy\";\r\nimport { HardMode } from \"~/design/factory/basic-mode/BasicModeHard\";\r\nimport { MediumMode } from \"~/design/factory/basic-mode/BasicModeMedium\";\r\nimport { SingletonStarShip } from \"~/design/singleton/SingletonStarShip\";\r\n\r\nimport { Egg } from \"~/services/Egg\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\nimport { getRandomInt } from \"./helper.extension\";\r\n\r\nimport EGG_IMAGE from \"/images/egg.png\";\r\nlet score = 0;\r\n\r\n\r\nexport function moveStarShip(starShip: SingletonStarShip, view: CanvasView): void {\r\n  if(\r\n    (starShip.isMovingLeft && starShip.pos.x > 0) ||\r\n    (starShip.isMovingRight && starShip.pos.x < view.canvas.width - starShip.width) ||\r\n    (starShip.isMovingDown && starShip.pos.y > 0) ||\r\n    (starShip.isMovingUp && starShip.pos.y < view.canvas.height - starShip.height )\r\n  ) {\r\n    starShip.moveStarShip();\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function shootingBullet(starShip: SingletonStarShip, view: CanvasView, conlision: Collision, chickens: EazyMode[] \r\n  | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[]): void {\r\n  starShip.bullets.forEach(b => {\r\n    view.drawSprite(b);\r\n    b.moveBullet();\r\n    const collidingChicken = conlision.isCollidingChickens(b, chickens);\r\n    if (collidingChicken) {\r\n      score += b.damage;\r\n      view.drawScore(\"Score: \" + (score + starShip.score).toString() );\r\n    }\r\n  })\r\n  starShip.nukes.forEach(n => {\r\n    view.drawSprite(n);\r\n    n.moveNuke();\r\n    const collidingChicken = conlision.isCollidingNukes(n, chickens);\r\n    if (collidingChicken) {\r\n      score += 100;\r\n      view.drawScore(\"Score: \" + (score + starShip.score).toString() );\r\n    }\r\n  })\r\n  starShip.score = score;\r\n}\r\n\r\nexport function drawAndMoveGift(conlision: Collision, view: CanvasView, starShip: SingletonStarShip): void {\r\n  conlision.gifts.forEach(g => {\r\n    view.drawSprite(g);\r\n    g.moveItemSupport();\r\n    const conflicking = conlision.checkCollidingItem(g, starShip);\r\n    if(conflicking) {\r\n      starShip.typeBullet = conlision.typeItem;\r\n      //view.drawGift(changeGiftBoxesInUI(conlision.typeItem));\r\n    }\r\n  })\r\n}\r\n\r\nexport function drawAndMoveEgg(starShip: SingletonStarShip,conlision: Collision, chickens: EazyMode[] \r\n  | HardMode[] | MediumMode[] | ChallengesMode[] | SuperHardMode[], view: CanvasView): void {\r\n  var number = getRandomInt(150);\r\n  if(number === 50) {\r\n    var index = getRandomInt(chickens.length);\r\n    conlision.eggs.push(new Egg(1, 30, 30, {x: chickens[index].pos.x, y: chickens[index].pos.y}, EGG_IMAGE))\r\n  }\r\n  \r\n  conlision.eggs.forEach(e => {\r\n    view.drawSprite(e);\r\n    e.moveEgg();\r\n    conlision.checkCollidingEgg(e, starShip);\r\n  })\r\n}\r\n\r\nexport function drawAndMoveChicken(chickens: EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[], view: CanvasView): void {\r\n  \r\n  chickens.forEach((chicken, i) => {\r\n  \r\n    chicken.moveChickenByCross(view);\r\n    chicken.drawChicken();\r\n  }) \r\n}\r\n  ","\r\nimport { BulletModel } from \"~/model/Bullet.model\";\r\nimport { PADDLE_WIDTH } from \"~/setup\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { Vector } from \"~/types\";\r\n\r\nimport { ItemSupport } from \"~/services/Item\";\r\nimport { ItemModel } from \"~/model/Item.model\";\r\nimport GIFT_BOX01 from '/images/gift-fire.png';\r\nimport { IStrategy } from \"~/interface/Stategy.interface\";\r\nimport { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\n\r\n\r\nexport class Nomaltrategy implements IStrategy {\r\n  public doChangeInfoBullet(data: BulletModel, pos: Vector): Bullet {\r\n    const nomalBullet: BulletModel = data\r\n    const bullet = new Bullet(\r\n      nomalBullet.speed, nomalBullet.size, \r\n      {x: pos.x + (PADDLE_WIDTH/2 - nomalBullet.size/2),\r\n       y: pos.y}, \r\n       nomalBullet.image, randomIntFromInterval(nomalBullet.damage, nomalBullet.damage + 2)  , 1);\r\n\r\n    return bullet;\r\n  }\r\n  public doChangeTypeItem(data: ItemModel, pos: Vector): ItemSupport {\r\n    const fireItem: ItemModel = {\r\n      speed: data.speed,\r\n      size: data.size,\r\n      image: GIFT_BOX01,\r\n      type: data.type\r\n    }\r\n    const item = new ItemSupport(\r\n      fireItem.speed, fireItem.size,\r\n      {x: pos.x, y: pos.y}, \r\n      fireItem.image, fireItem.type.Id);\r\n    return item;\r\n  }\r\n}","import { Vector } from \"~/types\";\r\n\r\nexport class Nuke {\r\n    private nukeImage: HTMLImageElement = new Image();\r\n    private speed: Vector;\r\n    constructor(\r\n        speed: number,\r\n        private nukeWidth: number,\r\n        private nukeHeight: number,\r\n        private position: Vector,\r\n        image: string\r\n    ) {\r\n        this.speed = {\r\n            x: speed,\r\n            y: -speed,\r\n        };\r\n        this.nukeWidth = nukeWidth;\r\n        this.nukeHeight = nukeHeight;\r\n        this.position = position;\r\n        this.nukeImage.src = image;\r\n    }\r\n    get width(): number {\r\n        return this.nukeWidth;\r\n      }\r\n    \r\n      get height(): number {\r\n        return this.nukeHeight;\r\n      }\r\n    \r\n      get pos(): Vector {\r\n        return this.position;\r\n      }\r\n    \r\n      get image(): HTMLImageElement { \r\n        return this.nukeImage;\r\n      }\r\n      moveNuke(): void {\r\n        this.pos.y += this.speed.y;\r\n        this.pos.x += this.speed.x/2;\r\n      }\r\n      changeDirectionWhenConfict(): void {\r\n        this.pos.y = -100;\r\n        this.pos.x = -100;\r\n      }\r\n\r\n}","import { BulletModel } from \"~/model/Bullet.model\";\r\nimport { Bullet } from \"~/services/Bullet\";\r\nimport { BALL_SIZE, BALL_SPEED, PADDLE_HEIGHT, PADDLE_SPEED, PADDLE_STARTX, PADDLE_WIDTH } from \"~/setup\";\r\nimport { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\nimport { Context } from \"../strategy/context\";\r\nimport { FireStrategy } from \"../strategy/FireStrategy\";\r\nimport { IceStrategy } from \"../strategy/IceStrategy\";\r\nimport { LeafStrategy } from \"../strategy/LeafStrategy\";\r\nimport { LightStrategy } from \"../strategy/LightningStrategy\";\r\nimport { Nomaltrategy } from \"../strategy/NomalStrategy\";\r\nimport { StoneStrategy } from \"../strategy/StoneStrategy\";\r\nimport STARSHIP_IMAGE from '/images/spaceship.png';\r\nimport STARSHIP_IMAGE1 from '/images/spaceship02.png';\r\nimport STARSHIP_IMAGE4 from '/images/spaceship04.png';\r\n\r\nimport BALL_IMAGE from '/images/ball.png';\r\nimport { Nuke } from \"~/services/Nuke\";\r\nimport ROCKET_IMAGE from '/images/rocket.png';\r\n\r\nexport class SingletonStarShip {\r\n    public score = 0;\r\n    private static instance: SingletonStarShip;\r\n    bullets: Bullet[] = [];\r\n    nukes: Nuke[] = []\r\n    private paddleImage: HTMLImageElement = new Image();\r\n    private moveLeft: boolean;\r\n    private moveRight: boolean;\r\n    private moveUp: boolean;\r\n    private moveDown:  boolean;\r\n    public shooting: boolean;\r\n    public nuking: boolean;\r\n    level: number;\r\n    typeBullet: number;\r\n\r\n    constructor(\r\n        private speed: number,\r\n        private paddleWidth: number,\r\n        private paddleHeight: number,\r\n        private position: Vector,\r\n        image: string,\r\n        level: number,\r\n        typeBullet: number\r\n    ) {\r\n        this.speed = speed;\r\n        this.paddleWidth = paddleWidth;\r\n        this.paddleHeight = paddleHeight;\r\n        this.position = position;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.moveDown = false;\r\n        this.moveUp = false;\r\n        this.shooting = false;\r\n        this.nuking = false;\r\n        this.paddleImage.src = image;\r\n        this.level = level;\r\n        this.typeBullet = typeBullet;\r\n        // Event Listeners\r\n        document.addEventListener('keydown', this.handleKeyRight);\r\n        document.addEventListener('keyup', this.handleKeyLeft);\r\n    }\r\n    public static getInstance(view: CanvasView, startShip: string): SingletonStarShip {\r\n\r\n        if (!SingletonStarShip.instance) {\r\n            if(startShip === \"1\") {\r\n              SingletonStarShip.instance = new SingletonStarShip(PADDLE_SPEED, PADDLE_WIDTH, PADDLE_HEIGHT, {x: PADDLE_STARTX, y: view.canvas.height - PADDLE_HEIGHT - 5}, STARSHIP_IMAGE, 3, -1);\r\n            }\r\n            else if(startShip === \"2\") {\r\n              SingletonStarShip.instance = new SingletonStarShip(PADDLE_SPEED + 5, PADDLE_WIDTH - 10, PADDLE_HEIGHT - 15, {x: PADDLE_STARTX, y: view.canvas.height - PADDLE_HEIGHT - 5}, STARSHIP_IMAGE1, 4, -1);\r\n            }\r\n            else if(startShip === \"3\") {\r\n            SingletonStarShip.instance = new SingletonStarShip(PADDLE_SPEED - 2, PADDLE_WIDTH - 3, PADDLE_HEIGHT - 3, {x: PADDLE_STARTX, y: view.canvas.height - PADDLE_HEIGHT - 5}, STARSHIP_IMAGE4, 6, 2\r\n              );\r\n            }\r\n            else {\r\n              SingletonStarShip.instance = new SingletonStarShip(PADDLE_SPEED, PADDLE_WIDTH, PADDLE_HEIGHT, {x: PADDLE_STARTX, y: view.canvas.height - PADDLE_HEIGHT - 5}, STARSHIP_IMAGE, 3, -1);\r\n            }\r\n        }\r\n\r\n        return SingletonStarShip.instance;\r\n    }\r\n\r\n    // Getters\r\n    get width(): number {\r\n        return this.paddleWidth;\r\n    }\r\n\r\n    get scoreGame():number {\r\n      return this.score;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.paddleHeight;\r\n    }\r\n\r\n    get pos(): Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get typeOfBullet(): number {\r\n        return this.typeBullet;\r\n    }\r\n    get image(): HTMLImageElement {\r\n        return this.paddleImage;\r\n    }\r\n\r\n    get isMovingLeft(): boolean {\r\n        return this.moveLeft;\r\n    }\r\n\r\n    get isMovingRight(): boolean {\r\n        return this.moveRight;\r\n    }\r\n\r\n    get isShooting(): boolean {\r\n        return this.moveRight;\r\n    }\r\n\r\n    get heart(): number {\r\n        return this.level;\r\n    }\r\n\r\n    get isMovingUp(): boolean {\r\n        return this.moveUp;\r\n    }\r\n\r\n    get isMovingDown(): boolean {\r\n        return this.moveDown;\r\n    }\r\n\r\n\r\n    moveStarShip(): void {\r\n        if(this.moveLeft) this.pos.x -= this.speed;\r\n        if(this.moveRight) this.pos.x += this.speed;\r\n        if(this.moveDown) this.pos.y -= this.speed;\r\n        if(this.moveUp) this.pos.y += this.speed;\r\n    }\r\n\r\n    handleKeyLeft = (e: KeyboardEvent): void => {\r\n        switch (e.key) {\r\n            case 'a':\r\n              this.moveLeft = false\r\n              break;\r\n            case 'd':\r\n              this.moveRight = false\r\n              break;\r\n            case 'w':\r\n              this.moveDown = false\r\n              break;\r\n            case 's':\r\n              this.moveUp = false\r\n              break;\r\n            case 'j':\r\n              this.shooting = false;\r\n              break;\r\n            case 'k':\r\n              this.nuking = false;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    };\r\n\r\n    handleKeyRight = (e: KeyboardEvent): void => {\r\n        switch (e.key) {\r\n            case 'a':\r\n              this.moveLeft = true\r\n              break;\r\n            case 'd':\r\n              this.moveRight = true\r\n              break;\r\n            case 'w':\r\n              this.moveDown = true\r\n              break;\r\n            case 's':\r\n              this.moveUp = true\r\n              break;\r\n            case 'j':\r\n              this.StrategyBullet();\r\n              this.shooting = true;\r\n              break;\r\n            case 'k':\r\n              const nuke = new Nuke(3, 120, 110, {x: this.pos.x, y: this.pos.y}, ROCKET_IMAGE);\r\n              this.nukes.push(nuke);\r\n              this.nuking = true;\r\n            default:\r\n                break;\r\n          }\r\n    };\r\n\r\n    public StrategyBullet(): Bullet[] {\r\n        const bulletModel: BulletModel = {\r\n            speed: BALL_SPEED,\r\n            size: BALL_SIZE,\r\n            image: BALL_IMAGE,\r\n            damage: 1\r\n          }\r\n      \r\n          let bullet: any;\r\n          const pos: Vector = {x: this.pos.x, y: this.pos.y};\r\n          \r\n          if(this.typeOfBullet === -1) {\r\n            const context = new Context(new Nomaltrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n          else if (this.typeOfBullet === 1) {\r\n            const context = new Context(new FireStrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n          else if (this.typeOfBullet === 2) {\r\n            const context = new Context(new IceStrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n          else if (this.typeOfBullet === 3) {\r\n            const context = new Context(new LightStrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n          else if (this.typeOfBullet === 4) {\r\n            const context = new Context(new LeafStrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n          else if (this.typeOfBullet === 5) {\r\n            const context = new Context(new StoneStrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n      \r\n          else if (typeof(this.typeOfBullet) === 'undefined') {\r\n            const context = new Context(new Nomaltrategy());\r\n            bullet = context.doBusinessLogicBullet(bulletModel, pos);\r\n          }\r\n      \r\n          //console.log(this.typeOfBullet);\r\n      \r\n          this.bullets.push(bullet as Bullet)\r\n          return this.bullets;\r\n    }\r\n}","import { IAbstractBasicMode } from \"~/interface/AbstractFactory.interface\";\r\nimport { Chicken } from \"~/services/Chicken\";\r\nimport { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\n\r\n\r\nexport class EazyMode implements IAbstractBasicMode {\r\n    private context: CanvasRenderingContext2D | null;\r\n    private canvas: HTMLCanvasElement;\r\n    private chickenImage: HTMLImageElement = new Image();\r\n    private speed: Vector;\r\n    public angle: number = 0;\r\n\r\n    constructor(\r\n        canvasName: string,\r\n        speed: number,\r\n        private chickenWidth: number,\r\n        private chickenHeight: number,\r\n        private postion: Vector,\r\n        private chickenEnergy: number,\r\n        image: string\r\n        ) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.speed = {\r\n            x: speed,\r\n            y: -speed\r\n          };\r\n          this.chickenWidth = chickenWidth;\r\n          this.chickenHeight = chickenHeight;\r\n          this.postion = postion;\r\n          this.chickenEnergy = chickenEnergy;\r\n          this.chickenImage.src = image;\r\n    }\r\n    get angleMove(): number {\r\n      return this.angle;\r\n    }\r\n    get width(): number {\r\n        return this.chickenWidth;\r\n      }\r\n    \r\n      get height(): number {\r\n        return this.chickenHeight;\r\n      }\r\n    \r\n      get pos(): Vector {\r\n        return this.postion;\r\n      }\r\n    \r\n      get image(): HTMLImageElement { \r\n        return this.chickenImage;\r\n      }\r\n    \r\n      get energy(): number {\r\n        return this.chickenEnergy;\r\n      }\r\n    \r\n      set energy(energy: number) {\r\n        this.chickenEnergy = energy;\r\n      }\r\n    \r\n    public drawChicken(): void {\r\n  \r\n        this.context?.drawImage(\r\n            this.chickenImage,\r\n            this.pos.x,\r\n            this.pos.y,\r\n            this.width,\r\n            this.height \r\n        );\r\n    }\r\n    public moveChickenByCross(view: CanvasView): void {\r\n        if(this.pos.x < 0 || (this.pos.x + this.width) > view.canvas.width) {\r\n            this.speed.x = - this.speed.x;\r\n          }\r\n      \r\n          if (this.pos.y < 0 || (this.pos.y + this.height) > view.canvas.height/2) {\r\n            this.speed.y = - this.speed.y;\r\n          }\r\n          view.context?.rotate(this.angle)\r\n          this.pos.x += this.speed.x\r\n          this.pos.y += this.speed.y;\r\n    }\r\n}","import { IAbstractBasicMode, IAbstractFactory } from \"~/interface/AbstractFactory.interface\";\r\nimport { BRICK_HEIGHT, BRICK_PADDING, BRICK_WIDTH, CHICKEN_ENERGY, CHICKEN_IMAGES, STAGE_COLS, STAGE_PADDING } from \"~/setup\";\r\nimport { ChallengesMode } from \"../advance-mode/AdvanceModeChallenges\";\r\nimport { EazyMode } from \"../basic-mode/BasicModeEazy\";\r\n\r\nexport class ConcreteFactoryBasic implements IAbstractFactory {\r\n    public createBasicModeGame(level: number[], typeLevel: string): IAbstractBasicMode[] {\r\n        if(typeLevel == \"BOSS\") {\r\n          return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new EazyMode(\r\n                \"#playField\",\r\n                2,\r\n                200,\r\n                220,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element],\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as EazyMode[]);\r\n        }\r\n        else {\r\n          return level.reduce((ack, element, i) => {\r\n              const row = Math.floor((i + 1) / STAGE_COLS);\r\n              const col = i % STAGE_COLS;\r\n          \r\n              const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n              const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n          \r\n              if (element === 0) return ack;\r\n          \r\n              return [\r\n                ...ack,\r\n                new EazyMode(\r\n                  \"#playField\",\r\n                  0.8,\r\n                  BRICK_WIDTH,\r\n                  BRICK_HEIGHT,\r\n                  { x, y },\r\n                  CHICKEN_ENERGY[element],\r\n                  CHICKEN_IMAGES[element],\r\n                  \r\n                )\r\n              ];\r\n            }, [] as EazyMode[]);\r\n        }\r\n    }\r\n\r\n    public createAdvancedModeGame(level: number[]): null {\r\n        return null;\r\n    }\r\n}","import { IAbstractAdvancedMode } from \"~/interface/AbstractFactory.interface\";\r\nimport { Chicken } from \"~/services/Chicken\";\r\nimport { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\n\r\nexport class ChallengesMode implements IAbstractAdvancedMode {\r\n    private context: CanvasRenderingContext2D | null;\r\n    private canvas: HTMLCanvasElement;\r\n    private chickenImage: HTMLImageElement = new Image();\r\n    private speed: Vector;\r\n    public angle: number = 0;\r\n    constructor(\r\n        canvasName: string,\r\n        speed: number,\r\n        private chickenWidth: number,\r\n        private chickenHeight: number,\r\n        private postion: Vector,\r\n        private chickenEnergy: number,\r\n        image: string\r\n        ) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.speed = {\r\n            x: speed,\r\n            y: -speed\r\n          };\r\n          this.chickenWidth = chickenWidth;\r\n          this.chickenHeight = chickenHeight;\r\n          this.postion = postion;\r\n          this.chickenEnergy = chickenEnergy;\r\n          this.chickenImage.src = image;\r\n    }\r\n\r\n    get width(): number {\r\n        return this.chickenWidth;\r\n      }\r\n    \r\n      get height(): number {\r\n        return this.chickenHeight;\r\n      }\r\n    \r\n      get pos(): Vector {\r\n        return this.postion;\r\n      }\r\n    \r\n      get image(): HTMLImageElement { \r\n        return this.chickenImage;\r\n      }\r\n    \r\n      get energy(): number {\r\n        return this.chickenEnergy;\r\n      }\r\n    \r\n      set energy(energy: number) {\r\n        this.chickenEnergy = energy;\r\n      }\r\n    \r\n    public drawChicken(): void {\r\n        \r\n        this.context?.drawImage(\r\n            this.chickenImage,\r\n            this.pos.x,\r\n            this.pos.y,\r\n            this.width,\r\n            this.height \r\n        );\r\n    }\r\n    \r\n    public moveChickenByCross(view: CanvasView): void {\r\n        if(this.pos.x < 0 || (this.pos.x + this.width) > view.canvas.width) {\r\n            this.speed.x = - this.speed.x;\r\n            }\r\n        \r\n            if (this.pos.y < 0 || (this.pos.y + this.height) > view.canvas.height) {\r\n            this.speed.y = - this.speed.y;\r\n            }\r\n            this.pos.x += this.speed.x\r\n            this.pos.y += this.speed.y;\r\n    }\r\n}","import { IAbstractBasicMode } from \"~/interface/AbstractFactory.interface\";\r\nimport { Chicken } from \"~/services/Chicken\";\r\nimport { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\n\r\nexport class HardMode implements IAbstractBasicMode {\r\n    private context: CanvasRenderingContext2D | null;\r\n    private canvas: HTMLCanvasElement;\r\n    private chickenImage: HTMLImageElement = new Image();\r\n    private speed: Vector;\r\n    public angle: number = 0;\r\n    constructor(\r\n        canvasName: string,\r\n        speed: number,\r\n        private chickenWidth: number,\r\n        private chickenHeight: number,\r\n        private postion: Vector,\r\n        private chickenEnergy: number,\r\n        image: string\r\n        ) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.speed = {\r\n            x: speed,\r\n            y: -speed\r\n          };\r\n          this.chickenWidth = chickenWidth;\r\n          this.chickenHeight = chickenHeight;\r\n          this.postion = postion;\r\n          this.chickenEnergy = chickenEnergy;\r\n          this.chickenImage.src = image;\r\n    }\r\n\r\n    get width(): number {\r\n        return this.chickenWidth;\r\n      }\r\n    \r\n      get height(): number {\r\n        return this.chickenHeight;\r\n      }\r\n    \r\n      get pos(): Vector {\r\n        return this.postion;\r\n      }\r\n    \r\n      get image(): HTMLImageElement { \r\n        return this.chickenImage;\r\n      }\r\n    \r\n      get energy(): number {\r\n        return this.chickenEnergy;\r\n      }\r\n    \r\n      set energy(energy: number) {\r\n        this.chickenEnergy = energy;\r\n      }\r\n    \r\n    public drawChicken(): void {\r\n\r\n        this.context?.drawImage(\r\n            this.chickenImage,\r\n            this.pos.x,\r\n            this.pos.y,\r\n            this.width,\r\n            this.height \r\n        );\r\n    }\r\n    public moveChickenByCross(view: CanvasView): void {\r\n        if(this.pos.x < 0 || (this.pos.x + this.width) > view.canvas.width) {\r\n            this.speed.x = - this.speed.x;\r\n          }\r\n      \r\n          if (this.pos.y < 0 || (this.pos.y + this.height) > view.canvas.height/1.5) {\r\n            this.speed.y = - this.speed.y;\r\n          }\r\n          this.pos.x += this.speed.x\r\n          this.pos.y += this.speed.y;\r\n    }\r\n}","import { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport {  IAbstractAdvancedMode, IAbstractBasicMode, IAbstractFactory } from \"~/interface/AbstractFactory.interface\";\r\nimport { BRICK_HEIGHT, BRICK_PADDING, BRICK_WIDTH, CHICKEN_ENERGY, CHICKEN_IMAGES, STAGE_COLS, STAGE_PADDING } from \"~/setup\";\r\nimport { ChallengesMode } from \"../advance-mode/AdvanceModeChallenges\";\r\n\r\nimport { HardMode } from \"../basic-mode/BasicModeHard\";\r\n\r\nexport class ConcreteFactoryChallenge implements IAbstractFactory {\r\n\r\n    public createBasicModeGame(level: number[]): IAbstractBasicMode[] {\r\n        return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new HardMode(\r\n                \"#playField\",\r\n                3,\r\n                BRICK_WIDTH,\r\n                BRICK_HEIGHT,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element] + 40,\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as HardMode[]);\r\n    }\r\n\r\n   public createAdvancedModeGame(level: number[], typeLV: string): IAbstractAdvancedMode[] | null {\r\n    if(typeLV === \"BOSS\") {\r\n      return level.reduce((ack, element, i) => {\r\n        const row = Math.floor((i + 1) / STAGE_COLS);\r\n        const col = i % STAGE_COLS;\r\n    \r\n        const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n        const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n    \r\n        if (element === 0) return ack;\r\n    \r\n        return [\r\n          ...ack,\r\n          new ChallengesMode(\r\n            \"#playField\",\r\n            3,\r\n            200,\r\n            220,\r\n            { x, y },\r\n            CHICKEN_ENERGY[element],\r\n            CHICKEN_IMAGES[element],\r\n            \r\n          )\r\n        ];\r\n      }, [] as ChallengesMode[]);\r\n    }\r\n    else {\r\n    return level.reduce((ack, element, i) => {\r\n        const row = Math.floor((i + 1) / STAGE_COLS);\r\n        const col = i % STAGE_COLS;\r\n    \r\n        const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n        const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n    \r\n        if (element === 0) return ack;\r\n    \r\n        return [\r\n          ...ack,\r\n          new ChallengesMode(\r\n            \"#playField\",\r\n            5,\r\n            BRICK_WIDTH,\r\n            BRICK_HEIGHT,\r\n            { x, y },\r\n            CHICKEN_ENERGY[element] + randomIntFromInterval(20,  30) ,\r\n            CHICKEN_IMAGES[element],\r\n            \r\n          )\r\n        ];\r\n      }, [] as ChallengesMode[]);\r\n   }\r\n  }\r\n}","import { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport {  IAbstractBasicMode, IAbstractFactory } from \"~/interface/AbstractFactory.interface\";\r\nimport { BRICK_HEIGHT, BRICK_PADDING, BRICK_WIDTH, CHICKEN_ENERGY, CHICKEN_IMAGES, STAGE_COLS, STAGE_PADDING } from \"~/setup\";\r\n\r\nimport { HardMode } from \"../basic-mode/BasicModeHard\";\r\n\r\nexport class ConcreteFactoryHard implements IAbstractFactory {\r\n    public createBasicModeGame(level: number[], typeLV: string): IAbstractBasicMode[] {\r\n        if(typeLV == \"BOSS\") {\r\n          return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new HardMode(\r\n                \"#playField\",\r\n                2,\r\n                200,\r\n                220,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element],\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as HardMode[]);\r\n        }\r\n        else {\r\n        return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new HardMode(\r\n                \"#playField\",\r\n                1.5,\r\n                BRICK_WIDTH,\r\n                BRICK_HEIGHT,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element] + randomIntFromInterval(6,  11) ,\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as HardMode[]);\r\n        }\r\n    }\r\n\r\n    public createAdvancedModeGame(level: number[]): null {\r\n        return null;\r\n    }\r\n}","import { IAbstractBasicMode } from \"~/interface/AbstractFactory.interface\";\r\nimport { Chicken } from \"~/services/Chicken\";\r\nimport { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\n\r\nexport class MediumMode implements IAbstractBasicMode {\r\n    private context: CanvasRenderingContext2D | null;\r\n    private canvas: HTMLCanvasElement;\r\n    private chickenImage: HTMLImageElement = new Image();\r\n    private speed: Vector;\r\n    public angle: number = 0;\r\n    constructor(\r\n        canvasName: string,\r\n        speed: number,\r\n        private chickenWidth: number,\r\n        private chickenHeight: number,\r\n        private postion: Vector,\r\n        private chickenEnergy: number,\r\n        image: string\r\n        ) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.speed = {\r\n            x: speed,\r\n            y: -speed\r\n          };\r\n          this.chickenWidth = chickenWidth;\r\n          this.chickenHeight = chickenHeight;\r\n          this.postion = postion;\r\n          this.chickenEnergy = chickenEnergy;\r\n          this.chickenImage.src = image;\r\n    }\r\n\r\n    get width(): number {\r\n        return this.chickenWidth;\r\n      }\r\n    \r\n      get height(): number {\r\n        return this.chickenHeight;\r\n      }\r\n    \r\n      get pos(): Vector {\r\n        return this.postion;\r\n      }\r\n    \r\n      get image(): HTMLImageElement { \r\n        return this.chickenImage;\r\n      }\r\n    \r\n      get energy(): number {\r\n        return this.chickenEnergy;\r\n      }\r\n    \r\n      set energy(energy: number) {\r\n        this.chickenEnergy = energy;\r\n      }\r\n    \r\n    public drawChicken(): void {\r\n      \r\n        this.context?.drawImage(\r\n            this.chickenImage,\r\n            this.pos.x,\r\n            this.pos.y,\r\n            this.width,\r\n            this.height \r\n        );\r\n    }\r\n    public moveChickenByCross(view: CanvasView): void {\r\n        if(this.pos.x < 0 || (this.pos.x + this.width) > view.canvas.width) {\r\n            this.speed.x = - this.speed.x;\r\n          }\r\n      \r\n          if (this.pos.y < 0 || (this.pos.y + this.height) > view.canvas.height) {\r\n            this.speed.y = - this.speed.y;\r\n          }\r\n          this.pos.x += this.speed.x\r\n          this.pos.y += this.speed.y;\r\n    }\r\n}","import { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport { IAbstractBasicMode, IAbstractFactory } from \"~/interface/AbstractFactory.interface\";\r\nimport { BRICK_HEIGHT, BRICK_PADDING, BRICK_WIDTH, CHICKEN_ENERGY, CHICKEN_IMAGES, STAGE_COLS, STAGE_PADDING } from \"~/setup\";\r\nimport { ChallengesMode } from \"../advance-mode/AdvanceModeChallenges\";\r\nimport { EazyMode } from \"../basic-mode/BasicModeEazy\";\r\nimport { MediumMode } from \"../basic-mode/BasicModeMedium\";\r\n\r\nexport class ConcreteFactoryMedium implements IAbstractFactory {\r\n    public createBasicModeGame(level: number[], typeLV: string): IAbstractBasicMode[] {\r\n        if(typeLV === \"BOSS\") {\r\n          return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new MediumMode(\r\n                \"#playField\",\r\n                2,\r\n                200,\r\n                220,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element],\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as MediumMode[]);\r\n        }\r\n        else{\r\n        return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new MediumMode(\r\n                \"#playField\",\r\n                1.5,\r\n                BRICK_WIDTH,\r\n                BRICK_HEIGHT,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element] + randomIntFromInterval(2,  5),\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as MediumMode[]);\r\n        }\r\n    }\r\n\r\n    public createAdvancedModeGame(level: number[]): null {\r\n        return null;\r\n    }\r\n}","import { IAbstractAdvancedMode, IAbstractBasicMode } from \"~/interface/AbstractFactory.interface\";\r\nimport { Chicken } from \"~/services/Chicken\";\r\nimport { Vector } from \"~/types\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\n\r\nexport class SuperHardMode implements IAbstractAdvancedMode {\r\n    private context: CanvasRenderingContext2D | null;\r\n    private canvas: HTMLCanvasElement;\r\n    private chickenImage: HTMLImageElement = new Image();\r\n    private speed: Vector;\r\n    public angle: number = 0;\r\n    constructor(\r\n        canvasName: string,\r\n        speed: number,\r\n        private chickenWidth: number,\r\n        private chickenHeight: number,\r\n        private postion: Vector,\r\n        private chickenEnergy: number,\r\n        image: string\r\n        ) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.speed = {\r\n            x: speed,\r\n            y: -speed\r\n          };\r\n          this.chickenWidth = chickenWidth;\r\n          this.chickenHeight = chickenHeight;\r\n          this.postion = postion;\r\n          this.chickenEnergy = chickenEnergy;\r\n          this.chickenImage.src = image;\r\n    }\r\n\r\n    get width(): number {\r\n        return this.chickenWidth;\r\n      }\r\n    \r\n      get height(): number {\r\n        return this.chickenHeight;\r\n      }\r\n    \r\n      get pos(): Vector {\r\n        return this.postion;\r\n      }\r\n    \r\n      get image(): HTMLImageElement { \r\n        return this.chickenImage;\r\n      }\r\n    \r\n      get energy(): number {\r\n        return this.chickenEnergy;\r\n      }\r\n    \r\n      set energy(energy: number) {\r\n        this.chickenEnergy = energy;\r\n      }\r\n    \r\n    public drawChicken(): void {\r\n\r\n        this.context?.drawImage(\r\n            this.chickenImage,\r\n            this.pos.x,\r\n            this.pos.y,\r\n            this.width,\r\n            this.height \r\n        );\r\n    }\r\n    \r\n    public moveChickenByCross(view: CanvasView): void {\r\n        if(this.pos.x < 0 || (this.pos.x + this.width) > view.canvas.width) {\r\n            this.speed.x = - this.speed.x;\r\n            }\r\n        \r\n            if (this.pos.y < 0 || (this.pos.y + this.height) > view.canvas.height) {\r\n            this.speed.y = - this.speed.y;\r\n            }\r\n            this.pos.x += this.speed.x\r\n            this.pos.y += this.speed.y;\r\n    }\r\n}","import { randomIntFromInterval } from \"~/extensions/helper.extension\";\r\nimport {  IAbstractAdvancedMode, IAbstractBasicMode, IAbstractFactory } from \"~/interface/AbstractFactory.interface\";\r\nimport { BRICK_HEIGHT, BRICK_PADDING, BRICK_WIDTH, CHICKEN_ENERGY, CHICKEN_IMAGES, STAGE_COLS, STAGE_PADDING } from \"~/setup\";\r\nimport { ChallengesMode } from \"../advance-mode/AdvanceModeChallenges\";\r\nimport { SuperHardMode } from \"../advance-mode/AdvanceModeSuperHard\";\r\n\r\nimport { HardMode } from \"../basic-mode/BasicModeHard\";\r\n\r\nexport class ConcreteFactorySuperHard implements IAbstractFactory {\r\n\r\n    public createBasicModeGame(level: number[]): IAbstractBasicMode[] {\r\n        return level.reduce((ack, element, i) => {\r\n            const row = Math.floor((i + 1) / STAGE_COLS);\r\n            const col = i % STAGE_COLS;\r\n        \r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n        \r\n            if (element === 0) return ack;\r\n        \r\n            return [\r\n              ...ack,\r\n              new HardMode(\r\n                \"#playField\",\r\n                1.5,\r\n                BRICK_WIDTH,\r\n                BRICK_HEIGHT,\r\n                { x, y },\r\n                CHICKEN_ENERGY[element] + 15,\r\n                CHICKEN_IMAGES[element],\r\n                \r\n              )\r\n            ];\r\n          }, [] as HardMode[]);\r\n    }\r\n\r\n   public createAdvancedModeGame(level: number[], typeLV: string): IAbstractAdvancedMode[] | null {\r\n    if(typeLV = \"BOSS\") {\r\n      return level.reduce((ack, element, i) => {\r\n        const row = Math.floor((i + 1) / STAGE_COLS);\r\n        const col = i % STAGE_COLS;\r\n    \r\n        const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n        const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n    \r\n        if (element === 0) return ack;\r\n    \r\n        return [\r\n          ...ack,\r\n          new SuperHardMode(\r\n            \"#playField\",\r\n            2,\r\n            200,\r\n            220,\r\n            { x, y },\r\n            CHICKEN_ENERGY[element],\r\n            CHICKEN_IMAGES[element],\r\n            \r\n          )\r\n        ];\r\n      }, [] as SuperHardMode[]);\r\n    }\r\n    else {\r\n      return level.reduce((ack, element, i) => {\r\n          const row = Math.floor((i + 1) / STAGE_COLS);\r\n          const col = i % STAGE_COLS;\r\n      \r\n          const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n          const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n      \r\n          if (element === 0) return ack;\r\n      \r\n          return [\r\n            ...ack,\r\n            new ChallengesMode(\r\n              \"#playField\",\r\n              3,\r\n              BRICK_WIDTH,\r\n              BRICK_HEIGHT,\r\n              { x, y },\r\n              CHICKEN_ENERGY[element] + randomIntFromInterval(12,  18) ,\r\n              CHICKEN_IMAGES[element],\r\n              \r\n            )\r\n          ];\r\n        }, [] as ChallengesMode[]);\r\n      }\r\n   }\r\n}","import { ChallengesMode } from \"~/design/factory/advance-mode/AdvanceModeChallenges\";\r\nimport { SuperHardMode } from \"~/design/factory/advance-mode/AdvanceModeSuperHard\";\r\nimport { EazyMode } from \"~/design/factory/basic-mode/BasicModeEazy\";\r\nimport { HardMode } from \"~/design/factory/basic-mode/BasicModeHard\";\r\nimport { MediumMode } from \"~/design/factory/basic-mode/BasicModeMedium\";\r\nimport { ConcreteFactoryBasic } from \"~/design/factory/concrete-factory/ConcreteFactoryBasic\";\r\nimport { ConcreteFactoryChallenge } from \"~/design/factory/concrete-factory/ConcreteFactoryChallenge\";\r\nimport { ConcreteFactoryHard } from \"~/design/factory/concrete-factory/ConcreteFactoryHard\";\r\nimport { ConcreteFactoryMedium } from \"~/design/factory/concrete-factory/ConcreteFactoryMedium\";\r\nimport { ConcreteFactorySuperHard } from \"~/design/factory/concrete-factory/ConcreteFactorySuperHard\";\r\nimport { IAbstractAdvancedMode, IAbstractBasicMode, IAbstractFactory } from \"~/interface/AbstractFactory.interface\";\r\nimport { LEVEL1 } from \"~/setup\";\r\nimport { CanvasView } from \"~/view/CanvasView\";\r\n\r\nexport function modeGame(factory: IAbstractFactory, level: number[]): IAbstractBasicMode[] | IAbstractAdvancedMode[] | null  {\r\n    var new_chickens: IAbstractBasicMode[] | IAbstractAdvancedMode[] | null = [];\r\n    var nameModel = factory.constructor.name;\r\n    var typeLV = level.length === 9 ? \"BOSS\" : \"BASIC\";\r\n    if(nameModel == \"ConcreteFactoryBasic\" || nameModel == \"ConcreteFactoryMedium\" || nameModel == \"ConcreteFactoryHard\") {\r\n      new_chickens = factory.createBasicModeGame(level, typeLV)\r\n    }\r\n    else {\r\n      new_chickens = factory.createAdvancedModeGame(level, typeLV);\r\n    }\r\n    return new_chickens;\r\n}\r\n\r\nexport function setModeGame(view: CanvasView, level: number[]) : EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[] {\r\n    var chickens = [] as EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[];\r\n    if(view.getMode() == \"No\" || view.getMode() == \"Eazy\") {\r\n        chickens = modeGame(new ConcreteFactoryBasic(), level) as EazyMode[];\r\n    }\r\n    else if (view.getMode() == \"Medium\") {\r\n    chickens = modeGame(new ConcreteFactoryMedium(), level) as MediumMode[];\r\n    }\r\n    else if(view.getMode() == \"Hard\") {\r\n    chickens = modeGame(new ConcreteFactoryHard(), level) as HardMode[];\r\n    }\r\n    else if(view.getMode() == \"Supper Hard\") {\r\n    chickens = modeGame(new ConcreteFactorySuperHard(), level) as SuperHardMode[];\r\n    }\r\n    else if(view.getMode() == \"Challenge\") {\r\n    chickens = modeGame(new ConcreteFactoryChallenge(), level) as ChallengesMode[];\r\n    }\r\n\r\n    return chickens;\r\n}\r\n\r\n","import { CanvasView } from \"./view/CanvasView\";\r\nimport { Collision } from \"./Colision\";\r\nimport { LEVEL1, LEVEL17, LV, PADDLE_HEIGHT, PADDLE_STARTX, PADDLE_WIDTH } from \"./setup\";\r\nimport { drawAndMoveChicken, drawAndMoveEgg, drawAndMoveGift, moveStarShip, shootingBullet } from \"./extensions/move.extensions\";\r\nimport { SingletonStarShip } from \"./design/singleton/SingletonStarShip\";\r\nimport { EazyMode } from \"./design/factory/basic-mode/BasicModeEazy\";\r\nimport { MediumMode } from \"./design/factory/basic-mode/BasicModeMedium\";\r\nimport { HardMode } from \"./design/factory/basic-mode/BasicModeHard\";\r\nimport { ChallengesMode } from \"./design/factory/advance-mode/AdvanceModeChallenges\";\r\nimport { SuperHardMode } from \"./design/factory/advance-mode/AdvanceModeSuperHard\";\r\nimport { createHeart, hpRemaining, sumEnergyChicken } from \"./extensions/helper.extension\";\r\nimport { setModeGame } from \"./extensions/mode.extension\";\r\nimport { Nuke } from \"./services/Nuke\";\r\nimport ROCKET_IMAGE from '/images/rocket.png';\r\n\r\n\r\nlet score = 0;\r\nlet gameOver = false;\r\nlet sumEnergy = 0;\r\nlet count = 0;\r\n\r\nfunction setGameOver(view: CanvasView) {\r\n  view.drawInfo(\"Game Over!\");\r\n  gameOver = false;\r\n}\r\n\r\nfunction setGameWin(view: CanvasView) {\r\n  view.drawInfo(\"Game Won!\");\r\n}\r\n\r\nfunction gameLoop(view: CanvasView, chickens: EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[], \r\n    starShip: SingletonStarShip, conlision: Collision, nuke: Nuke) {\r\n  view.clear();\r\n \r\n  drawAndMoveChicken(chickens, view);\r\n  drawAndMoveEgg(starShip, conlision, chickens, view);\r\n  moveStarShip(starShip, view);\r\n  shootingBullet(starShip, view, conlision, chickens);\r\n  drawAndMoveGift(conlision, view, starShip);\r\n  //console.log(chickens);\r\n  view.drawSprite(starShip);\r\n  view.drawHeart(createHeart(starShip.heart));\r\n  view.drawMeat(conlision.countMeat.toString());\r\n  view.drawCoin(conlision.countCoin.toString());\r\n  view.drawNuke(conlision.countNuke.toString());\r\n\r\n  view.drawHP(hpRemaining(sumEnergy, sumEnergyChicken(chickens)));\r\n\r\n  if(starShip.level === 0) return setGameOver(view);\r\n  if(conlision.checkCollidingStarshipWithChickens(chickens, starShip)) return setGameOver(view);\r\n  if(chickens.length === 0) {\r\n    count++;\r\n    // chickens = createBoss(LEVEL2);\r\n    // sumEnergy = sumEnergyChicken(chickens);\r\n    // view.drawChicken(chickens);\r\n    sumEnergy = sumEnergyChicken(chickens as EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[]);\r\n    view.getBtnLv(\"#lv1-\" + (count + 1).toString())\r\n    view.setEnableLV();\r\n    chickens = setModeGame(view, LV[count]);\r\n    \r\n    if(count == LV.length) return setGameWin(view);\r\n  }\r\n  if(gameOver) return setGameOver(view);\r\n\r\n  requestAnimationFrame(() => gameLoop(view, chickens, starShip, conlision, nuke))\r\n}\r\n\r\n\r\nfunction startGame(view: CanvasView) {\r\n  var chickens = [] as EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[];\r\n  score = 0;\r\n  view.drawInfo('');\r\n  view.drawScore(\"Score: 0\");\r\n  const collision = new Collision();\r\n  //const chickens = createChickens(LEVEL1);\r\n  if(view.getLV() !== \"0\") {\r\n    var level = parseInt(view.getLV());\r\n    console.log(level);\r\n    chickens = setModeGame(view, LV[level - 1])\r\n  }\r\n  else {\r\n    chickens = setModeGame(view, LEVEL1)\r\n  }\r\n  \r\n\r\n  sumEnergy = sumEnergyChicken(chickens as EazyMode[] | MediumMode[] | HardMode[] | ChallengesMode[] | SuperHardMode[]);\r\n  const startShip = SingletonStarShip.getInstance(view, view.getStarShip());\r\n  const nuke = new Nuke(5, PADDLE_WIDTH, PADDLE_HEIGHT, {x: PADDLE_STARTX, y: view.canvas.height - PADDLE_HEIGHT - 5}, ROCKET_IMAGE);\r\n  gameLoop(view, chickens, startShip, collision, nuke);\r\n}\r\n\r\nconst view = new CanvasView(\"#playField\"); \r\nview.initStartButton(startGame)\r\n\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}
{"id":"../node_modules/@azure/core-util/dist-esm/src/hex.js","dependencies":[{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\hex.js.map","includedInParent":true,"mtime":1655014965913},{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\package.json","includedInParent":true,"mtime":1655023849936},{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\package.json","includedInParent":true,"mtime":1655014965871}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bufferToHex = bufferToHex;\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param buffer - Raw binary data.\n * @internal\n */\nfunction bufferToHex(buffer) {\n  var bytes = new Uint8Array(buffer);\n  return Array.prototype.map.call(bytes, byteToHex).join(\"\");\n}\n/**\n * Converts a byte to a hexadecimal string.\n * @param byte - An integer representation of a byte.\n * @internal\n */\n\n\nfunction byteToHex(byte) {\n  var hex = byte.toString(16);\n  return hex.length === 2 ? hex : \"0\".concat(hex);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/hex.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":16,"column":9}},{"source":"../../src/hex.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":20}},{"source":"../../src/hex.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":16,"column":21}},{"source":"../../src/hex.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":27}},{"source":"../../src/hex.ts","name":null,"original":{"line":9,"column":47},"generated":{"line":16,"column":29}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":17,"column":6}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":17,"column":11}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":17,"column":14}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":17,"column":18}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":17,"column":28}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":31},"generated":{"line":17,"column":29}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":17,"column":35}},{"source":"../../src/hex.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":36}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":18,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":9}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":18,"column":14}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":18,"column":15}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":24}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":18,"column":25}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":28}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":29},"generated":{"line":18,"column":29}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":33}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":34},"generated":{"line":18,"column":34}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":39}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":41},"generated":{"line":18,"column":41}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":50}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":52},"generated":{"line":18,"column":52}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":56}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":57},"generated":{"line":18,"column":57}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":18,"column":59}},{"source":"../../src/hex.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":18,"column":60}},{"source":"../../src/hex.ts","name":null,"original":{"line":12,"column":1},"generated":{"line":19,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":27,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":27,"column":9}},{"source":"../../src/hex.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":27,"column":18}},{"source":"../../src/hex.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":27,"column":19}},{"source":"../../src/hex.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":27,"column":23}},{"source":"../../src/hex.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":27,"column":25}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":28,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":28,"column":6}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":28,"column":9}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":28,"column":12}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":18},"generated":{"line":28,"column":16}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":28,"column":17}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":28,"column":25}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":28},"generated":{"line":28,"column":26}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":28,"column":28}},{"source":"../../src/hex.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":28,"column":29}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":29,"column":0}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":29,"column":9}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":12},"generated":{"line":29,"column":12}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":29,"column":13}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":29,"column":19}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":29,"column":24}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":29,"column":25}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":28},"generated":{"line":29,"column":28}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":29,"column":31}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":38},"generated":{"line":29,"column":45}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":29,"column":48}},{"source":"../../src/hex.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":29,"column":49}},{"source":"../../src/hex.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":30,"column":0}}],"sources":{"../../src/hex.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToHex(buffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(buffer);\n  return Array.prototype.map.call(bytes, byteToHex).join(\"\");\n}\n\n/**\n * Converts a byte to a hexadecimal string.\n * @param byte - An integer representation of a byte.\n * @internal\n */\nfunction byteToHex(byte: number): string {\n  const hex = byte.toString(16);\n  return hex.length === 2 ? hex : `0${hex}`;\n}\n"},"lineCount":null}},"error":null,"hash":"1538262bc2e8cd71411dd5d80cac791f","cacheData":{"env":{}}}
{"id":"database/dbOperations.ts","dependencies":[{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\tsconfig.json","includedInParent":true,"mtime":1651033692207},{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\package.json","includedInParent":true,"mtime":1655023849936},{"name":"./dbConfig","loc":{"line":37,"column":23},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\src\\database\\dbOperations.ts","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\src\\database\\dbConfig.ts"},{"name":"mssql","loc":{"line":38,"column":16},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\src\\database\\dbOperations.ts","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\mssql\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectToSqlServer = void 0;\n\nvar _dbConfig = require(\"./dbConfig\");\n\nvar _mssql = _interopRequireDefault(require(\"mssql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = void 0 && (void 0).__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\n// test connection to SQL server using node-mssql\nvar connectToSqlServer = function () {\n  return __awaiter(void 0, void 0, Promise, function () {\n    var pool, users, err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , _mssql.default.connect(_dbConfig.config)];\n\n        case 1:\n          pool = _a.sent();\n          return [4\n          /*yield*/\n          , pool.request().query(\"SELECT * from AppUser\")];\n\n        case 2:\n          users = _a.sent();\n          console.log(users);\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          err_1 = _a.sent();\n          console.error(err_1);\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}();\n\nexports.connectToSqlServer = connectToSqlServer;"},"sourceMaps":{"js":{"mappings":[{"source":"database/dbOperations.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":157,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":158,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":158,"column":4}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":158,"column":22}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":158,"column":25}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":158,"column":37}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":9}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":18}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":19}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":24}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":25}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":27}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":32}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":33}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":45},"generated":{"line":159,"column":35}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":159,"column":42}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":159,"column":44}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":159,"column":56}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":166,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":166,"column":17}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":166,"column":18}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":167,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":168,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":168,"column":12}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":25},"generated":{"line":168,"column":27}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":168,"column":34}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":33},"generated":{"line":168,"column":35}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":21},"generated":{"line":168,"column":51}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":168,"column":52}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":168,"column":53}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":171,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":171,"column":10}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":171,"column":14}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":171,"column":17}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":171,"column":19}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":171,"column":20}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":171,"column":24}},{"source":"database/dbOperations.ts","name":null,"original":{"line":9,"column":8},"generated":{"line":171,"column":26}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":172,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":172,"column":17}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":172,"column":18}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":173,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":174,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":174,"column":12}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":174,"column":16}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":174,"column":17}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":174,"column":24}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":37},"generated":{"line":174,"column":27}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":174,"column":32}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":43},"generated":{"line":174,"column":33}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":174,"column":56}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":174,"column":57}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":174,"column":58}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":177,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":177,"column":10}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":177,"column":15}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":177,"column":18}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":177,"column":20}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":177,"column":21}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":177,"column":25}},{"source":"database/dbOperations.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":177,"column":27}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":178,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":178,"column":10}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":178,"column":17}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":178,"column":18}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":178,"column":21}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":178,"column":22}},{"source":"database/dbOperations.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":178,"column":27}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":185,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":185,"column":10}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":185,"column":17}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":12},"generated":{"line":185,"column":18}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":185,"column":23}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":18},"generated":{"line":185,"column":24}},{"source":"database/dbOperations.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":185,"column":29}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":196,"column":3}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":196,"column":4}},{"source":"database/dbOperations.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":197,"column":0}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":34},"generated":{"line":197,"column":1}},{"source":"database/dbOperations.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":197,"column":3}}],"sources":{"database/dbOperations.ts":"\r\nimport { Users } from \"~/model/User.model\";\r\nimport { config } from \"./dbConfig\"\r\nimport sql from 'mssql';\r\n\r\n// test connection to SQL server using node-mssql\r\nexport const connectToSqlServer = (async (): Promise<void> => {\r\n  try {\r\n    let pool = await sql.connect(config);\r\n    let users = await pool.request().query(\"SELECT * from AppUser\");\r\n    console.log(users)\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n})()"},"lineCount":null}},"error":null,"hash":"ffc9d7adedfd2bfa9a6b1545edcaa562","cacheData":{"env":{}}}
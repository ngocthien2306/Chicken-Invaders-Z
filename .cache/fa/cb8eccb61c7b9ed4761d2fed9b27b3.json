{"id":"../node_modules/@azure/core-util/dist-esm/src/sha256.browser.js","dependencies":[{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\sha256.browser.js.map","includedInParent":true,"mtime":1655014965970},{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\package.json","includedInParent":true,"mtime":1655023849936},{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\package.json","includedInParent":true,"mtime":1655014965871},{"name":"./base64.browser","loc":{"line":3,"column":46},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\sha256.browser.js","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\base64.browser.js"},{"name":"./hex","loc":{"line":4,"column":28},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\sha256.browser.js","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\hex.js"},{"name":"./utf8.browser","loc":{"line":5,"column":28},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\sha256.browser.js","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\@azure\\core-util\\dist-esm\\src\\utf8.browser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeSha256Hmac = computeSha256Hmac;\nexports.computeSha256Hash = computeSha256Hash;\n\nvar _base = require(\"./base64.browser\");\n\nvar _hex = require(\"./hex\");\n\nvar _utf = require(\"./utf8.browser\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar subtleCrypto;\n/**\n * Returns a cached reference to the Web API crypto.subtle object.\n * @internal\n */\n\nfunction getCrypto() {\n  if (subtleCrypto) {\n    return subtleCrypto;\n  }\n\n  if (!self.crypto || !self.crypto.subtle) {\n    throw new Error(\"Your browser environment does not support cryptography functions.\");\n  }\n\n  subtleCrypto = self.crypto.subtle;\n  return subtleCrypto;\n}\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\n\n\nfunction computeSha256Hmac(_x, _x2, _x3) {\n  return _computeSha256Hmac.apply(this, arguments);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\n\n\nfunction _computeSha256Hmac() {\n  _computeSha256Hmac = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(key, stringToSign, encoding) {\n    var crypto, keyBytes, stringToSignBytes, cryptoKey, signature;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            crypto = getCrypto();\n            keyBytes = (0, _base.base64ToBytes)(key);\n            stringToSignBytes = (0, _utf.utf8ToBytes)(stringToSign);\n            _context.next = 5;\n            return crypto.importKey(\"raw\", keyBytes, {\n              name: \"HMAC\",\n              hash: {\n                name: \"SHA-256\"\n              }\n            }, false, [\"sign\"]);\n\n          case 5:\n            cryptoKey = _context.sent;\n            _context.next = 8;\n            return crypto.sign({\n              name: \"HMAC\",\n              hash: {\n                name: \"SHA-256\"\n              }\n            }, cryptoKey, stringToSignBytes);\n\n          case 8:\n            signature = _context.sent;\n            _context.t0 = encoding;\n            _context.next = _context.t0 === \"base64\" ? 12 : _context.t0 === \"hex\" ? 13 : 14;\n            break;\n\n          case 12:\n            return _context.abrupt(\"return\", (0, _base.bufferToBase64)(signature));\n\n          case 13:\n            return _context.abrupt(\"return\", (0, _hex.bufferToHex)(signature));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _computeSha256Hmac.apply(this, arguments);\n}\n\nfunction computeSha256Hash(_x4, _x5) {\n  return _computeSha256Hash.apply(this, arguments);\n}\n\nfunction _computeSha256Hash() {\n  _computeSha256Hash = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(content, encoding) {\n    var contentBytes, digest;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            contentBytes = (0, _utf.utf8ToBytes)(content);\n            _context2.next = 3;\n            return getCrypto().digest({\n              name: \"SHA-256\"\n            }, contentBytes);\n\n          case 3:\n            digest = _context2.sent;\n            _context2.t0 = encoding;\n            _context2.next = _context2.t0 === \"base64\" ? 7 : _context2.t0 === \"hex\" ? 8 : 9;\n            break;\n\n          case 7:\n            return _context2.abrupt(\"return\", (0, _base.bufferToBase64)(digest));\n\n          case 8:\n            return _context2.abrupt(\"return\", (0, _hex.bufferToHex)(digest));\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _computeSha256Hash.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":19,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":19,"column":4}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":19,"column":16}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":25,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":25,"column":9}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":25,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":57,"column":18},"generated":{"line":25,"column":21}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":26,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":26,"column":6}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":26,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":58,"column":20},"generated":{"line":26,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":27,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":59,"column":11},"generated":{"line":27,"column":11}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":27,"column":23}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":60,"column":3},"generated":{"line":28,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":30,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":30,"column":6}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":7},"generated":{"line":30,"column":7}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":30,"column":11}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":30,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":30,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":22},"generated":{"line":30,"column":22}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":23},"generated":{"line":30,"column":23}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":27},"generated":{"line":30,"column":27}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":28},"generated":{"line":30,"column":28}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":23},"generated":{"line":30,"column":34}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":35},"generated":{"line":30,"column":35}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":30,"column":41}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":62,"column":43},"generated":{"line":30,"column":43}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":31,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":10},"generated":{"line":31,"column":10}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":14},"generated":{"line":31,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":10},"generated":{"line":31,"column":19}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":20},"generated":{"line":31,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":10},"generated":{"line":31,"column":87}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":31,"column":88}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":64,"column":3},"generated":{"line":32,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":34,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":34,"column":2}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":14},"generated":{"line":34,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":34,"column":17}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":21},"generated":{"line":34,"column":21}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":22},"generated":{"line":34,"column":22}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":34,"column":28}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":29},"generated":{"line":34,"column":29}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":34,"column":35}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":35,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":35,"column":9}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":35,"column":21}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":36,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":37,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":22},"generated":{"line":45,"column":9}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":112,"column":0},"generated":{"line":48,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":56,"column":79}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":56,"column":96}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":56,"column":99}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":56,"column":101}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":56,"column":113}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":56,"column":115}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":56,"column":123}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":57,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":58,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":59,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":60,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":61,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":81,"column":8},"generated":{"line":62,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":81,"column":8},"generated":{"line":62,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":62,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":81,"column":17},"generated":{"line":62,"column":21}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":81,"column":26},"generated":{"line":62,"column":30}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":62,"column":32}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":63,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":63,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":63,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":82,"column":19},"generated":{"line":63,"column":23}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":82,"column":33},"generated":{"line":63,"column":48}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":82,"column":19},"generated":{"line":63,"column":51}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":63,"column":52}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":64,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":64,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":64,"column":29}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":83,"column":28},"generated":{"line":64,"column":32}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":83,"column":40},"generated":{"line":64,"column":54}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":83,"column":28},"generated":{"line":64,"column":66}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":64,"column":67}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":65,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":66,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":66,"column":19}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":32},"generated":{"line":66,"column":25}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":33},"generated":{"line":66,"column":26}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":66,"column":35}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":86,"column":4},"generated":{"line":66,"column":36}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":66,"column":41}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":66,"column":43}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":66,"column":51}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":66,"column":53}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":67,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":67,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":89,"column":10},"generated":{"line":67,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":89,"column":12},"generated":{"line":67,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":67,"column":26}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":6},"generated":{"line":68,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":6},"generated":{"line":68,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":10},"generated":{"line":68,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":12},"generated":{"line":68,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":14},"generated":{"line":69,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":14},"generated":{"line":69,"column":16}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":18},"generated":{"line":69,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":20},"generated":{"line":69,"column":22}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":90,"column":12},"generated":{"line":70,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":71,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":71,"column":13}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":71,"column":15}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":71,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":71,"column":22}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":93,"column":5},"generated":{"line":71,"column":23}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":71,"column":29}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":71,"column":30}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":71,"column":31}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":73,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":74,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":74,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":74,"column":21}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":75,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":76,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":76,"column":19}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":32},"generated":{"line":76,"column":25}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":33},"generated":{"line":76,"column":26}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":76,"column":30}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":76,"column":31}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":77,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":77,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":97,"column":10},"generated":{"line":77,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":97,"column":12},"generated":{"line":77,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":77,"column":26}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":6},"generated":{"line":78,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":6},"generated":{"line":78,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":10},"generated":{"line":78,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":12},"generated":{"line":78,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":79,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":79,"column":16}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":79,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":20},"generated":{"line":79,"column":22}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":98,"column":12},"generated":{"line":80,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":96,"column":4},"generated":{"line":81,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":81,"column":13}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":100,"column":4},"generated":{"line":81,"column":15}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":81,"column":24}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":101,"column":4},"generated":{"line":81,"column":26}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":81,"column":43}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":81,"column":44}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":83,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":84,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":84,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":84,"column":21}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":85,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":104,"column":10},"generated":{"line":85,"column":26}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":85,"column":34}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":86,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":105,"column":9},"generated":{"line":86,"column":44}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":86,"column":52}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":107,"column":9},"generated":{"line":86,"column":76}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":86,"column":81}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":87,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":89,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":90,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":106,"column":13},"generated":{"line":90,"column":45}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":106,"column":28},"generated":{"line":90,"column":71}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":106,"column":13},"generated":{"line":90,"column":80}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":90,"column":81}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":92,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":93,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":108,"column":13},"generated":{"line":93,"column":45}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":108,"column":25},"generated":{"line":93,"column":67}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":108,"column":13},"generated":{"line":93,"column":76}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":93,"column":77}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":95,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":96,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":97,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":98,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":99,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":100,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":101,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":22},"generated":{"line":105,"column":9}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":110,"column":79}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":118,"column":2},"generated":{"line":110,"column":97}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":110,"column":104}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":119,"column":2},"generated":{"line":110,"column":106}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":110,"column":114}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":111,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":112,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":113,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":114,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":115,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":116,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":116,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":116,"column":24}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":121,"column":23},"generated":{"line":116,"column":27}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":121,"column":35},"generated":{"line":116,"column":49}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":121,"column":23},"generated":{"line":116,"column":56}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":116,"column":57}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":117,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":118,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":118,"column":19}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":32},"generated":{"line":118,"column":28}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":35},"generated":{"line":118,"column":31}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":118,"column":37}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":42},"generated":{"line":118,"column":38}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":44},"generated":{"line":119,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":44},"generated":{"line":119,"column":14}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":48},"generated":{"line":119,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":50},"generated":{"line":119,"column":20}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":42},"generated":{"line":120,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":120,"column":13}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":63},"generated":{"line":120,"column":15}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":120,"column":27}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":120,"column":28}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":122,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":123,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":123,"column":12}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":123,"column":18}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":124,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":124,"column":10},"generated":{"line":124,"column":27}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":124,"column":35}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":125,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":125,"column":9},"generated":{"line":125,"column":46}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":125,"column":54}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":127,"column":9},"generated":{"line":125,"column":78}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":125,"column":83}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":126,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":128,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":129,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":126,"column":13},"generated":{"line":129,"column":46}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":126,"column":28},"generated":{"line":129,"column":72}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":126,"column":13},"generated":{"line":129,"column":78}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":129,"column":79}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":131,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":132,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":128,"column":13},"generated":{"line":132,"column":46}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":128,"column":25},"generated":{"line":132,"column":68}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":128,"column":13},"generated":{"line":132,"column":74}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":132,"column":75}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":134,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":135,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":136,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":137,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":138,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":139,"column":0}},{"source":"../../src/sha256.browser.ts","name":null,"original":{"line":117,"column":7},"generated":{"line":140,"column":0}}],"sources":{"../../src/sha256.browser.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { base64ToBytes, bufferToBase64 } from \"./base64.browser\";\nimport { bufferToHex } from \"./hex\";\nimport { utf8ToBytes } from \"./utf8.browser\";\n\n// stubs for browser self.crypto\ninterface JsonWebKey {}\ninterface CryptoKey {}\ntype KeyUsage =\n  | \"decrypt\"\n  | \"deriveBits\"\n  | \"deriveKey\"\n  | \"encrypt\"\n  | \"sign\"\n  | \"unwrapKey\"\n  | \"verify\"\n  | \"wrapKey\";\ninterface Algorithm {\n  name: string;\n}\ninterface SubtleCrypto {\n  importKey(\n    format: string,\n    keyData: JsonWebKey,\n    algorithm: HmacImportParams,\n    extractable: boolean,\n    usage: KeyUsage[]\n  ): Promise<CryptoKey>;\n  sign(\n    algorithm: HmacImportParams,\n    key: CryptoKey,\n    data: ArrayBufferView | ArrayBuffer\n  ): Promise<ArrayBuffer>;\n  digest(algorithm: Algorithm, data: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer>;\n}\ninterface Crypto {\n  readonly subtle: SubtleCrypto;\n  getRandomValues<T extends ArrayBufferView | null>(array: T): T;\n}\ndeclare const self: {\n  crypto: Crypto;\n};\ninterface HmacImportParams {\n  name: string;\n  hash: Algorithm;\n  length?: number;\n}\n\nlet subtleCrypto: SubtleCrypto | undefined;\n\n/**\n * Returns a cached reference to the Web API crypto.subtle object.\n * @internal\n */\nfunction getCrypto(): SubtleCrypto {\n  if (subtleCrypto) {\n    return subtleCrypto;\n  }\n\n  if (!self.crypto || !self.crypto.subtle) {\n    throw new Error(\"Your browser environment does not support cryptography functions.\");\n  }\n\n  subtleCrypto = self.crypto.subtle;\n  return subtleCrypto;\n}\n\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport async function computeSha256Hmac(\n  key: string,\n  stringToSign: string,\n  encoding: \"base64\" | \"hex\"\n): Promise<string> {\n  const crypto = getCrypto();\n  const keyBytes = base64ToBytes(key);\n  const stringToSignBytes = utf8ToBytes(stringToSign);\n\n  const cryptoKey = await crypto.importKey(\n    \"raw\",\n    keyBytes,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    },\n    false,\n    [\"sign\"]\n  );\n  const signature = await crypto.sign(\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    },\n    cryptoKey,\n    stringToSignBytes\n  );\n\n  switch (encoding) {\n    case \"base64\":\n      return bufferToBase64(signature);\n    case \"hex\":\n      return bufferToHex(signature);\n  }\n}\n\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport async function computeSha256Hash(\n  content: string,\n  encoding: \"base64\" | \"hex\"\n): Promise<string> {\n  const contentBytes = utf8ToBytes(content);\n  const digest = await getCrypto().digest({ name: \"SHA-256\" }, contentBytes);\n\n  switch (encoding) {\n    case \"base64\":\n      return bufferToBase64(digest);\n    case \"hex\":\n      return bufferToHex(digest);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"18ac2e736c029139501c5ccf8cc49a4f","cacheData":{"env":{}}}
{"id":"../node_modules/is-regex/index.js","dependencies":[{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\package.json","includedInParent":true,"mtime":1655023849936},{"name":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\is-regex\\package.json","includedInParent":true,"mtime":1655014965676},{"name":"call-bind/callBound","loc":{"line":3,"column":24},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\is-regex\\index.js","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\call-bind\\callBound.js"},{"name":"has-tostringtag/shams","loc":{"line":4,"column":29},"parent":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\is-regex\\index.js","resolved":"C:\\Users\\hp\\Downloads\\HK2_21-22\\Design Pattern\\Demo\\typescript-arkanoid\\Chicken-TS\\node_modules\\has-tostringtag\\shams.js"}],"generated":{"js":"'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n  has = callBound('Object.prototype.hasOwnProperty');\n  $exec = callBound('RegExp.prototype.exec');\n  isRegexMarker = {};\n\n  var throwRegexMarker = function () {\n    throw isRegexMarker;\n  };\n\n  badStringifier = {\n    toString: throwRegexMarker,\n    valueOf: throwRegexMarker\n  };\n\n  if (typeof Symbol.toPrimitive === 'symbol') {\n    badStringifier[Symbol.toPrimitive] = throwRegexMarker;\n  }\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\nmodule.exports = hasToStringTag // eslint-disable-next-line consistent-return\n? function isRegex(value) {\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n\n  var descriptor = gOPD(value, 'lastIndex');\n  var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (!hasLastIndexDataProperty) {\n    return false;\n  }\n\n  try {\n    $exec(value, badStringifier);\n  } catch (e) {\n    return e === isRegexMarker;\n  }\n} : function isRegex(value) {\n  // In older browsers, typeof regex incorrectly returns 'function'\n  if (!value || typeof value !== 'object' && typeof value !== 'function') {\n    return false;\n  }\n\n  return $toString(value) === regexClass;\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":0}},{"name":"callBound","generated":{"line":3,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":4}},{"generated":{"line":3,"column":13},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":13}},{"name":"require","generated":{"line":3,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":16}},{"generated":{"line":3,"column":23},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":23}},{"generated":{"line":3,"column":24},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":24}},{"generated":{"line":3,"column":45},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":23}},{"generated":{"line":3,"column":46},"source":"../node_modules/is-regex/index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":0}},{"name":"hasToStringTag","generated":{"line":5,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":4}},{"generated":{"line":5,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":18}},{"name":"require","generated":{"line":5,"column":21},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":21}},{"generated":{"line":5,"column":28},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":28}},{"generated":{"line":5,"column":29},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":29}},{"generated":{"line":5,"column":52},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":28}},{"generated":{"line":5,"column":53},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":21}},{"generated":{"line":5,"column":55},"source":"../node_modules/is-regex/index.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":5,"column":0}},{"name":"has","generated":{"line":7,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":5,"column":4}},{"generated":{"line":7,"column":7},"source":"../node_modules/is-regex/index.js","original":{"line":5,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":6,"column":0}},{"name":"$exec","generated":{"line":8,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":6,"column":4}},{"generated":{"line":8,"column":9},"source":"../node_modules/is-regex/index.js","original":{"line":6,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":7,"column":0}},{"name":"isRegexMarker","generated":{"line":9,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":7,"column":4}},{"generated":{"line":9,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":7,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":8,"column":0}},{"name":"badStringifier","generated":{"line":10,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":8,"column":4}},{"generated":{"line":10,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":8,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":10,"column":0}},{"name":"hasToStringTag","generated":{"line":12,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":10,"column":4}},{"generated":{"line":12,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":10,"column":0}},{"generated":{"line":12,"column":20},"source":"../node_modules/is-regex/index.js","original":{"line":10,"column":20}},{"name":"has","generated":{"line":13,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":1}},{"name":"has","generated":{"line":13,"column":2},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":1}},{"generated":{"line":13,"column":5},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":4}},{"name":"callBound","generated":{"line":13,"column":8},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":7}},{"generated":{"line":13,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":16}},{"generated":{"line":13,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":17}},{"generated":{"line":13,"column":51},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":16}},{"generated":{"line":13,"column":52},"source":"../node_modules/is-regex/index.js","original":{"line":11,"column":1}},{"name":"$exec","generated":{"line":14,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":1}},{"name":"$exec","generated":{"line":14,"column":2},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":1}},{"generated":{"line":14,"column":7},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":6}},{"name":"callBound","generated":{"line":14,"column":10},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":9}},{"generated":{"line":14,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":18}},{"generated":{"line":14,"column":20},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":19}},{"generated":{"line":14,"column":43},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":18}},{"generated":{"line":14,"column":44},"source":"../node_modules/is-regex/index.js","original":{"line":12,"column":1}},{"name":"isRegexMarker","generated":{"line":15,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":13,"column":1}},{"name":"isRegexMarker","generated":{"line":15,"column":2},"source":"../node_modules/is-regex/index.js","original":{"line":13,"column":1}},{"generated":{"line":15,"column":15},"source":"../node_modules/is-regex/index.js","original":{"line":13,"column":14}},{"generated":{"line":15,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":13,"column":17}},{"generated":{"line":15,"column":20},"source":"../node_modules/is-regex/index.js","original":{"line":13,"column":1}},{"generated":{"line":17,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":15,"column":1}},{"name":"throwRegexMarker","generated":{"line":17,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":15,"column":5}},{"generated":{"line":17,"column":22},"source":"../node_modules/is-regex/index.js","original":{"line":15,"column":21}},{"generated":{"line":17,"column":25},"source":"../node_modules/is-regex/index.js","original":{"line":15,"column":24}},{"generated":{"line":17,"column":37},"source":"../node_modules/is-regex/index.js","original":{"line":15,"column":36}},{"generated":{"line":18,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":16,"column":2}},{"name":"isRegexMarker","generated":{"line":18,"column":10},"source":"../node_modules/is-regex/index.js","original":{"line":16,"column":8}},{"generated":{"line":18,"column":23},"source":"../node_modules/is-regex/index.js","original":{"line":16,"column":2}},{"generated":{"line":19,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":17,"column":2}},{"generated":{"line":19,"column":3},"source":"../node_modules/is-regex/index.js","original":{"line":15,"column":1}},{"name":"badStringifier","generated":{"line":21,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":1}},{"name":"badStringifier","generated":{"line":21,"column":2},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":1}},{"generated":{"line":21,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":15}},{"generated":{"line":21,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":18}},{"name":"toString","generated":{"line":22,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":19,"column":2}},{"name":"toString","generated":{"line":22,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":19,"column":2}},{"generated":{"line":22,"column":12},"source":"../node_modules/is-regex/index.js","original":{"line":19,"column":10}},{"name":"throwRegexMarker","generated":{"line":22,"column":14},"source":"../node_modules/is-regex/index.js","original":{"line":19,"column":12}},{"generated":{"line":22,"column":30},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":18}},{"name":"valueOf","generated":{"line":23,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":20,"column":2}},{"name":"valueOf","generated":{"line":23,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":20,"column":2}},{"generated":{"line":23,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":20,"column":9}},{"name":"throwRegexMarker","generated":{"line":23,"column":13},"source":"../node_modules/is-regex/index.js","original":{"line":20,"column":11}},{"generated":{"line":24,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":18}},{"generated":{"line":24,"column":3},"source":"../node_modules/is-regex/index.js","original":{"line":18,"column":1}},{"generated":{"line":26,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":1}},{"generated":{"line":26,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":5}},{"name":"Symbol","generated":{"line":26,"column":13},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":12}},{"generated":{"line":26,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":18}},{"name":"toPrimitive","generated":{"line":26,"column":20},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":19}},{"generated":{"line":26,"column":31},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":5}},{"generated":{"line":26,"column":36},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":35}},{"generated":{"line":26,"column":44},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":1}},{"generated":{"line":26,"column":46},"source":"../node_modules/is-regex/index.js","original":{"line":23,"column":45}},{"name":"badStringifier","generated":{"line":27,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":2}},{"name":"badStringifier","generated":{"line":27,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":2}},{"generated":{"line":27,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":16}},{"name":"Symbol","generated":{"line":27,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":17}},{"generated":{"line":27,"column":25},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":23}},{"name":"toPrimitive","generated":{"line":27,"column":26},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":24}},{"generated":{"line":27,"column":37},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":16}},{"generated":{"line":27,"column":38},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":2}},{"name":"throwRegexMarker","generated":{"line":27,"column":41},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":39}},{"generated":{"line":27,"column":57},"source":"../node_modules/is-regex/index.js","original":{"line":24,"column":2}},{"generated":{"line":28,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":25,"column":2}},{"generated":{"line":29,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":26,"column":1}},{"generated":{"line":31,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":0}},{"name":"$toString","generated":{"line":31,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":4}},{"generated":{"line":31,"column":13},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":13}},{"name":"callBound","generated":{"line":31,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":16}},{"generated":{"line":31,"column":25},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":25}},{"generated":{"line":31,"column":26},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":26}},{"generated":{"line":31,"column":53},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":25}},{"generated":{"line":31,"column":54},"source":"../node_modules/is-regex/index.js","original":{"line":28,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":0}},{"name":"gOPD","generated":{"line":32,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":4}},{"generated":{"line":32,"column":8},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":8}},{"name":"Object","generated":{"line":32,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":11}},{"generated":{"line":32,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":17}},{"name":"getOwnPropertyDescriptor","generated":{"line":32,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":18}},{"generated":{"line":32,"column":42},"source":"../node_modules/is-regex/index.js","original":{"line":29,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":30,"column":0}},{"name":"regexClass","generated":{"line":33,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":30,"column":4}},{"generated":{"line":33,"column":14},"source":"../node_modules/is-regex/index.js","original":{"line":30,"column":14}},{"generated":{"line":33,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":30,"column":17}},{"generated":{"line":33,"column":34},"source":"../node_modules/is-regex/index.js","original":{"line":30,"column":0}},{"name":"module","generated":{"line":34,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":0}},{"generated":{"line":34,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":6}},{"name":"exports","generated":{"line":34,"column":7},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":7}},{"generated":{"line":34,"column":14},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":0}},{"name":"hasToStringTag","generated":{"line":34,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":17}},{"generated":{"line":34,"column":31},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":31}},{"generated":{"line":34,"column":32},"source":"../node_modules/is-regex/index.js","original":{"line":33,"column":1}},{"generated":{"line":35,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":31}},{"generated":{"line":35,"column":2},"source":"../node_modules/is-regex/index.js","original":{"line":34,"column":3}},{"name":"isRegex","generated":{"line":35,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":34,"column":12}},{"generated":{"line":35,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":34,"column":3}},{"name":"value","generated":{"line":35,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":34,"column":20}},{"generated":{"line":35,"column":24},"source":"../node_modules/is-regex/index.js","original":{"line":34,"column":3}},{"generated":{"line":35,"column":26},"source":"../node_modules/is-regex/index.js","original":{"line":34,"column":27}},{"generated":{"line":36,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":2}},{"generated":{"line":36,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":6}},{"name":"value","generated":{"line":36,"column":7},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":7}},{"generated":{"line":36,"column":12},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":6}},{"generated":{"line":36,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":16}},{"name":"value","generated":{"line":36,"column":23},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":23}},{"generated":{"line":36,"column":28},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":16}},{"generated":{"line":36,"column":33},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":33}},{"generated":{"line":36,"column":41},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":2}},{"generated":{"line":36,"column":43},"source":"../node_modules/is-regex/index.js","original":{"line":35,"column":43}},{"generated":{"line":37,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":36,"column":3}},{"generated":{"line":37,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":36,"column":10}},{"generated":{"line":37,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":36,"column":3}},{"generated":{"line":38,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":37,"column":3}},{"generated":{"line":40,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":2}},{"name":"descriptor","generated":{"line":40,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":6}},{"generated":{"line":40,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":16}},{"name":"gOPD","generated":{"line":40,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":19}},{"generated":{"line":40,"column":23},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":23}},{"name":"value","generated":{"line":40,"column":24},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":24}},{"generated":{"line":40,"column":29},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":23}},{"generated":{"line":40,"column":31},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":31}},{"generated":{"line":40,"column":42},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":23}},{"generated":{"line":40,"column":43},"source":"../node_modules/is-regex/index.js","original":{"line":39,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":2}},{"name":"hasLastIndexDataProperty","generated":{"line":41,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":6}},{"generated":{"line":41,"column":30},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":30}},{"name":"descriptor","generated":{"line":41,"column":33},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":33}},{"generated":{"line":41,"column":43},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":43}},{"name":"has","generated":{"line":41,"column":47},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":47}},{"generated":{"line":41,"column":50},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":50}},{"name":"descriptor","generated":{"line":41,"column":51},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":51}},{"generated":{"line":41,"column":61},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":50}},{"generated":{"line":41,"column":63},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":63}},{"generated":{"line":41,"column":70},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":50}},{"generated":{"line":41,"column":71},"source":"../node_modules/is-regex/index.js","original":{"line":40,"column":2}},{"generated":{"line":43,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":41,"column":2}},{"generated":{"line":43,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":41,"column":6}},{"name":"hasLastIndexDataProperty","generated":{"line":43,"column":7},"source":"../node_modules/is-regex/index.js","original":{"line":41,"column":7}},{"generated":{"line":43,"column":31},"source":"../node_modules/is-regex/index.js","original":{"line":41,"column":2}},{"generated":{"line":43,"column":33},"source":"../node_modules/is-regex/index.js","original":{"line":41,"column":33}},{"generated":{"line":44,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":42,"column":3}},{"generated":{"line":44,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":42,"column":10}},{"generated":{"line":44,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":42,"column":3}},{"generated":{"line":45,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":43,"column":3}},{"generated":{"line":47,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":45,"column":2}},{"generated":{"line":47,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":45,"column":6}},{"name":"$exec","generated":{"line":48,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":3}},{"name":"$exec","generated":{"line":48,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":3}},{"generated":{"line":48,"column":9},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":8}},{"name":"value","generated":{"line":48,"column":10},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":9}},{"generated":{"line":48,"column":15},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":8}},{"name":"badStringifier","generated":{"line":48,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":16}},{"generated":{"line":48,"column":31},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":8}},{"generated":{"line":48,"column":32},"source":"../node_modules/is-regex/index.js","original":{"line":46,"column":3}},{"generated":{"line":49,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":47,"column":3}},{"generated":{"line":49,"column":3},"source":"../node_modules/is-regex/index.js","original":{"line":45,"column":2}},{"generated":{"line":49,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":47,"column":4}},{"name":"e","generated":{"line":49,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":47,"column":11}},{"generated":{"line":49,"column":12},"source":"../node_modules/is-regex/index.js","original":{"line":47,"column":4}},{"generated":{"line":49,"column":14},"source":"../node_modules/is-regex/index.js","original":{"line":47,"column":14}},{"generated":{"line":50,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":48,"column":3}},{"name":"e","generated":{"line":50,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":48,"column":10}},{"generated":{"line":50,"column":12},"source":"../node_modules/is-regex/index.js","original":{"line":48,"column":11}},{"name":"isRegexMarker","generated":{"line":50,"column":17},"source":"../node_modules/is-regex/index.js","original":{"line":48,"column":16}},{"generated":{"line":50,"column":30},"source":"../node_modules/is-regex/index.js","original":{"line":48,"column":3}},{"generated":{"line":51,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":49,"column":3}},{"generated":{"line":52,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":50,"column":2}},{"generated":{"line":52,"column":1},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":31}},{"generated":{"line":52,"column":4},"source":"../node_modules/is-regex/index.js","original":{"line":51,"column":3}},{"name":"isRegex","generated":{"line":52,"column":13},"source":"../node_modules/is-regex/index.js","original":{"line":51,"column":12}},{"generated":{"line":52,"column":20},"source":"../node_modules/is-regex/index.js","original":{"line":51,"column":3}},{"name":"value","generated":{"line":52,"column":21},"source":"../node_modules/is-regex/index.js","original":{"line":51,"column":20}},{"generated":{"line":52,"column":26},"source":"../node_modules/is-regex/index.js","original":{"line":51,"column":3}},{"generated":{"line":52,"column":28},"source":"../node_modules/is-regex/index.js","original":{"line":51,"column":27}},{"generated":{"line":53,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":52,"column":2}},{"generated":{"line":54,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":2}},{"generated":{"line":54,"column":6},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":6}},{"name":"value","generated":{"line":54,"column":7},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":7}},{"generated":{"line":54,"column":12},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":6}},{"generated":{"line":54,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":17}},{"name":"value","generated":{"line":54,"column":23},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":24}},{"generated":{"line":54,"column":28},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":17}},{"generated":{"line":54,"column":33},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":34}},{"generated":{"line":54,"column":41},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":17}},{"generated":{"line":54,"column":45},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":46}},{"name":"value","generated":{"line":54,"column":52},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":53}},{"generated":{"line":54,"column":57},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":46}},{"generated":{"line":54,"column":62},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":63}},{"generated":{"line":54,"column":72},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":2}},{"generated":{"line":54,"column":74},"source":"../node_modules/is-regex/index.js","original":{"line":53,"column":76}},{"generated":{"line":55,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":54,"column":3}},{"generated":{"line":55,"column":11},"source":"../node_modules/is-regex/index.js","original":{"line":54,"column":10}},{"generated":{"line":55,"column":16},"source":"../node_modules/is-regex/index.js","original":{"line":54,"column":3}},{"generated":{"line":56,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":55,"column":3}},{"generated":{"line":58,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":2}},{"name":"$toString","generated":{"line":58,"column":9},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":9}},{"generated":{"line":58,"column":18},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":18}},{"name":"value","generated":{"line":58,"column":19},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":19}},{"generated":{"line":58,"column":24},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":18}},{"generated":{"line":58,"column":25},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":9}},{"name":"regexClass","generated":{"line":58,"column":30},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":30}},{"generated":{"line":58,"column":40},"source":"../node_modules/is-regex/index.js","original":{"line":57,"column":2}},{"generated":{"line":59,"column":0},"source":"../node_modules/is-regex/index.js","original":{"line":58,"column":2}},{"generated":{"line":59,"column":1},"source":"../node_modules/is-regex/index.js","original":{"line":32,"column":0}}],"sources":{"../node_modules/is-regex/index.js":"'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n"},"lineCount":null}},"error":null,"hash":"56be3191150099dd5a046949f902c39e","cacheData":{"env":{}}}